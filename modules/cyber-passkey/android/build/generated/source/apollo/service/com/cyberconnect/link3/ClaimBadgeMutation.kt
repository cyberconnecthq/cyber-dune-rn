//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Mutation
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.adapter.ClaimBadgeMutation_ResponseAdapter
import com.cyberconnect.link3.adapter.ClaimBadgeMutation_VariablesAdapter
import com.cyberconnect.link3.selections.ClaimBadgeMutationSelections
import com.cyberconnect.link3.type.CollectW3STResponse_Status
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit

public data class ClaimBadgeMutation(
  public val eventId: String,
  public val chainId: Int,
) : Mutation<ClaimBadgeMutation.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    ClaimBadgeMutation_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = ClaimBadgeMutation_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cyberconnect.link3.type.Mutation.type
  )
  .selections(selections = ClaimBadgeMutationSelections.__root)
  .build()

  @ApolloAdaptableWith(ClaimBadgeMutation_ResponseAdapter.Data::class)
  public data class Data(
    public val collectW3ST: CollectW3ST,
  ) : Mutation.Data

  public data class CollectW3ST(
    public val status: CollectW3STResponse_Status,
    public val gasLess: Boolean,
    public val collector: String?,
    public val profileId: Int?,
    public val essenceId: Int?,
    public val preData: String?,
    public val collectId: String?,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "94807437b46e6488b4d623f8cde78779c69630202c0d667242c28f6fe7aaf9b3"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * mutation claimBadge($eventId: ID!, $chainId: Int!) {
     *   collectW3ST(eventId: $eventId, chainId: $chainId) {
     *     status
     *     gasLess
     *     collector
     *     profileId
     *     essenceId
     *     preData
     *     collectId
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "mutation claimBadge(${'$'}eventId: ID!, ${'$'}chainId: Int!) { collectW3ST(eventId: ${'$'}eventId, chainId: ${'$'}chainId) { status gasLess collector profileId essenceId preData collectId } }"

    public const val OPERATION_NAME: String = "claimBadge"
  }
}
