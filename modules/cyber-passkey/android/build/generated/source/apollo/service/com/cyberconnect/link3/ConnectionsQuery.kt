//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.adapter.ConnectionsQuery_ResponseAdapter
import com.cyberconnect.link3.fragment.ConnectionOrgProfile
import com.cyberconnect.link3.fragment.ConnectionPersonalProfile
import com.cyberconnect.link3.selections.ConnectionsQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit

public class ConnectionsQuery() : Query<ConnectionsQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = ConnectionsQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cyberconnect.link3.type.Query.type
  )
  .selections(selections = ConnectionsQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(ConnectionsQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val organization: Organization,
    public val topProfiles: TopProfiles,
    public val me: Me,
  ) : Query.Data

  public data class Organization(
    public val list: kotlin.collections.List<List>,
  )

  public data class List(
    public val __typename: String,
    /**
     * Synthetic field for 'ConnectionOrgProfile'
     */
    public val connectionOrgProfile: ConnectionOrgProfile?,
  )

  public data class TopProfiles(
    public val list: kotlin.collections.List<List1>,
  )

  public data class List1(
    public val __typename: String,
    /**
     * Synthetic field for 'ConnectionPersonalProfile'
     */
    public val connectionPersonalProfile: ConnectionPersonalProfile?,
  )

  public data class Me(
    public val `data`: Data1?,
  )

  public data class Data1(
    public val schoolmatesProfiles: kotlin.collections.List<SchoolmatesProfile>,
    public val similarWorkExperiencesProfiles:
        kotlin.collections.List<SimilarWorkExperiencesProfile>,
  )

  public data class SchoolmatesProfile(
    public val orgList: kotlin.collections.List<OrgList>,
    public val profile: Profile,
  )

  public data class OrgList(
    public val avatar: Any,
    public val name: String,
  )

  public data class Profile(
    public val __typename: String,
    /**
     * Synthetic field for 'ConnectionPersonalProfile'
     */
    public val connectionPersonalProfile: ConnectionPersonalProfile,
  )

  public data class SimilarWorkExperiencesProfile(
    public val orgList: kotlin.collections.List<OrgList1>,
    public val profile: Profile1,
  )

  public data class OrgList1(
    public val avatar: Any,
    public val name: String,
  )

  public data class Profile1(
    public val __typename: String,
    /**
     * Synthetic field for 'ConnectionPersonalProfile'
     */
    public val connectionPersonalProfile: ConnectionPersonalProfile,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "d8cd6993acb98ffcf5cf8f6bab12845c63be7fac1c1abde04a1927951454d5a7"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query connections {
     *   organization: featuredProfiles(filter: ORGANIZATION, first: 12) {
     *     list {
     *       __typename
     *       ...ConnectionOrgProfile
     *     }
     *   }
     *   topProfiles: featuredProfiles(filter: PERSONAL, first: 12) {
     *     list {
     *       __typename
     *       ...ConnectionPersonalProfile
     *     }
     *   }
     *   me {
     *     data {
     *       schoolmatesProfiles {
     *         orgList {
     *           avatar
     *           name
     *         }
     *         profile {
     *           __typename
     *           ...ConnectionPersonalProfile
     *         }
     *       }
     *       similarWorkExperiencesProfiles {
     *         orgList {
     *           avatar
     *           name
     *         }
     *         profile {
     *           __typename
     *           ...ConnectionPersonalProfile
     *         }
     *       }
     *     }
     *   }
     * }
     *
     * fragment ConnectionOrgProfile on OrgProfile {
     *   id
     *   handle
     *   bio
     *   displayName
     *   profilePicture
     *   isFollowing
     *   organization {
     *     followersCount
     *   }
     * }
     *
     * fragment ConnectionPersonalProfile on PerProfile {
     *   id
     *   handle
     *   owner {
     *     id
     *     price {
     *       price {
     *         value
     *         decimal
     *       }
     *     }
     *     lightInfo {
     *       attestation {
     *         uid
     *       }
     *     }
     *   }
     *   headline {
     *     displayName
     *     title
     *   }
     *   displayName {
     *     displayName
     *     type
     *   }
     *   profilePicture {
     *     picture
     *   }
     *   connectStatus
     *   connectionDegree
     *   reputation {
     *     total
     *   }
     *   isVerified
     *   mutualConnections {
     *     list {
     *       __typename
     *       handle
     *       id
     *       ... on PerProfile {
     *         profilePicture {
     *           picture
     *         }
     *         displayName {
     *           displayName
     *         }
     *       }
     *     }
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query connections { organization: featuredProfiles(filter: ORGANIZATION, first: 12) { list { __typename ...ConnectionOrgProfile } } topProfiles: featuredProfiles(filter: PERSONAL, first: 12) { list { __typename ...ConnectionPersonalProfile } } me { data { schoolmatesProfiles { orgList { avatar name } profile { __typename ...ConnectionPersonalProfile } } similarWorkExperiencesProfiles { orgList { avatar name } profile { __typename ...ConnectionPersonalProfile } } } } }  fragment ConnectionOrgProfile on OrgProfile { id handle bio displayName profilePicture isFollowing organization { followersCount } }  fragment ConnectionPersonalProfile on PerProfile { id handle owner { id price { price { value decimal } } lightInfo { attestation { uid } } } headline { displayName title } displayName { displayName type } profilePicture { picture } connectStatus connectionDegree reputation { total } isVerified mutualConnections { list { __typename handle id ... on PerProfile { profilePicture { picture } displayName { displayName } } } } }"

    public const val OPERATION_NAME: String = "connections"
  }
}
