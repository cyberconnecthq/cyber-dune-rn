//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.LinkWeb2Mutation
import com.cyberconnect.link3.type.LinkWeb2Response_Status
import com.cyberconnect.link3.type.adapter.LinkWeb2Response_Status_ResponseAdapter
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object LinkWeb2Mutation_ResponseAdapter {
  public object Data : Adapter<LinkWeb2Mutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("linkWeb2")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LinkWeb2Mutation.Data {
      var _linkWeb2: LinkWeb2Mutation.LinkWeb2? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _linkWeb2 = LinkWeb2.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LinkWeb2Mutation.Data(
        linkWeb2 = _linkWeb2!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LinkWeb2Mutation.Data,
    ): Unit {
      writer.name("linkWeb2")
      LinkWeb2.obj().toJson(writer, customScalarAdapters, value.linkWeb2)
    }
  }

  public object LinkWeb2 : Adapter<LinkWeb2Mutation.LinkWeb2> {
    public val RESPONSE_NAMES: List<String> = listOf("status", "message", "twitter")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LinkWeb2Mutation.LinkWeb2 {
      var _status: LinkWeb2Response_Status? = null
      var _message: String? = null
      var _twitter: LinkWeb2Mutation.Twitter? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _status = LinkWeb2Response_Status_ResponseAdapter.fromJson(reader,
              customScalarAdapters)
          1 -> _message = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _twitter = Twitter.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LinkWeb2Mutation.LinkWeb2(
        status = _status!!,
        message = _message!!,
        twitter = _twitter
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LinkWeb2Mutation.LinkWeb2,
    ): Unit {
      writer.name("status")
      LinkWeb2Response_Status_ResponseAdapter.toJson(writer, customScalarAdapters, value.status)

      writer.name("message")
      StringAdapter.toJson(writer, customScalarAdapters, value.message)

      writer.name("twitter")
      Twitter.obj().nullable().toJson(writer, customScalarAdapters, value.twitter)
    }
  }

  public object Twitter : Adapter<LinkWeb2Mutation.Twitter> {
    public val RESPONSE_NAMES: List<String> = listOf("twitterHandle", "twitterId")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LinkWeb2Mutation.Twitter {
      var _twitterHandle: String? = null
      var _twitterId: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _twitterHandle = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _twitterId = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LinkWeb2Mutation.Twitter(
        twitterHandle = _twitterHandle!!,
        twitterId = _twitterId!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LinkWeb2Mutation.Twitter,
    ): Unit {
      writer.name("twitterHandle")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterHandle)

      writer.name("twitterId")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterId)
    }
  }
}
