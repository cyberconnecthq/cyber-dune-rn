//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.AssetWalletsQuery
import kotlin.Any
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object AssetWalletsQuery_ResponseAdapter {
  public object Data : Adapter<AssetWalletsQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("me")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        AssetWalletsQuery.Data {
      var _me: AssetWalletsQuery.Me? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _me = Me.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return AssetWalletsQuery.Data(
        me = _me!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: AssetWalletsQuery.Data,
    ): Unit {
      writer.name("me")
      Me.obj().toJson(writer, customScalarAdapters, value.me)
    }
  }

  public object Me : Adapter<AssetWalletsQuery.Me> {
    public val RESPONSE_NAMES: List<String> = listOf("data")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        AssetWalletsQuery.Me {
      var _data: AssetWalletsQuery.Data1? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _data = Data1.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return AssetWalletsQuery.Me(
        `data` = _data
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: AssetWalletsQuery.Me,
    ): Unit {
      writer.name("data")
      Data1.obj().nullable().toJson(writer, customScalarAdapters, value.`data`)
    }
  }

  public object Data1 : Adapter<AssetWalletsQuery.Data1> {
    public val RESPONSE_NAMES: List<String> = listOf("privateInfo")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        AssetWalletsQuery.Data1 {
      var _privateInfo: AssetWalletsQuery.PrivateInfo? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _privateInfo = PrivateInfo.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return AssetWalletsQuery.Data1(
        privateInfo = _privateInfo
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: AssetWalletsQuery.Data1,
    ): Unit {
      writer.name("privateInfo")
      PrivateInfo.obj().nullable().toJson(writer, customScalarAdapters, value.privateInfo)
    }
  }

  public object PrivateInfo : Adapter<AssetWalletsQuery.PrivateInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("assetWallets")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        AssetWalletsQuery.PrivateInfo {
      var _assetWallets: List<Any>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _assetWallets = AnyAdapter.list().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return AssetWalletsQuery.PrivateInfo(
        assetWallets = _assetWallets
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: AssetWalletsQuery.PrivateInfo,
    ): Unit {
      writer.name("assetWallets")
      AnyAdapter.list().nullable().toJson(writer, customScalarAdapters, value.assetWallets)
    }
  }
}
