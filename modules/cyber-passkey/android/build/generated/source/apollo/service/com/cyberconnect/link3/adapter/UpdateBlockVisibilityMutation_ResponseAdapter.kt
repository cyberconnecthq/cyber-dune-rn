//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.UpdateBlockVisibilityMutation
import com.cyberconnect.link3.type.UpdateBlockVisibilityResponse_Status
import com.cyberconnect.link3.type.adapter.UpdateBlockVisibilityResponse_Status_ResponseAdapter
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object UpdateBlockVisibilityMutation_ResponseAdapter {
  public object Data : Adapter<UpdateBlockVisibilityMutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("updateBlockVisibility")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        UpdateBlockVisibilityMutation.Data {
      var _updateBlockVisibility: UpdateBlockVisibilityMutation.UpdateBlockVisibility? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _updateBlockVisibility = UpdateBlockVisibility.obj().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return UpdateBlockVisibilityMutation.Data(
        updateBlockVisibility = _updateBlockVisibility!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: UpdateBlockVisibilityMutation.Data,
    ): Unit {
      writer.name("updateBlockVisibility")
      UpdateBlockVisibility.obj().toJson(writer, customScalarAdapters, value.updateBlockVisibility)
    }
  }

  public object UpdateBlockVisibility : Adapter<UpdateBlockVisibilityMutation.UpdateBlockVisibility>
      {
    public val RESPONSE_NAMES: List<String> = listOf("status")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        UpdateBlockVisibilityMutation.UpdateBlockVisibility {
      var _status: UpdateBlockVisibilityResponse_Status? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _status = UpdateBlockVisibilityResponse_Status_ResponseAdapter.fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return UpdateBlockVisibilityMutation.UpdateBlockVisibility(
        status = _status!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: UpdateBlockVisibilityMutation.UpdateBlockVisibility,
    ): Unit {
      writer.name("status")
      UpdateBlockVisibilityResponse_Status_ResponseAdapter.toJson(writer, customScalarAdapters,
          value.status)
    }
  }
}
