//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.type.AwardType
import com.cyberconnect.link3.type.ClaimRaffleAwardResponse
import com.cyberconnect.link3.type.ClaimRaffleAwardResponse_Status
import com.cyberconnect.link3.type.GraphQLString
import kotlin.collections.List

public object ClaimRaffleMutationSelections {
  private val __claimRaffleAward: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "type",
          type = AwardType.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "status",
          type = ClaimRaffleAwardResponse_Status.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "profileId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "currency",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "signature",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "amount",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "deadline",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "code",
          type = GraphQLString.type.notNull()
        ).build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "claimRaffleAward",
          type = ClaimRaffleAwardResponse.type.notNull()
        ).arguments(listOf(
          CompiledArgument.Builder("eventId", CompiledVariable("eventId")).build()
        ))
        .selections(__claimRaffleAward)
        .build()
      )
}
