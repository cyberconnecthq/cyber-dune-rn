//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import kotlin.Any
import kotlin.Boolean
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object RecommendationBlockImpl_ResponseAdapter {
  public object RecommendationBlock : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock> {
    public val RESPONSE_NAMES: List<String> = listOf("received", "given")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock {
      var _received: List<com.cyberconnect.link3.fragment.RecommendationBlock.Received>? = null
      var _given: List<com.cyberconnect.link3.fragment.RecommendationBlock.Given>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _received = Received.obj().list().fromJson(reader, customScalarAdapters)
          1 -> _given = Given.obj().list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock(
        received = _received!!,
        given = _given!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock,
    ): Unit {
      writer.name("received")
      Received.obj().list().toJson(writer, customScalarAdapters, value.received)

      writer.name("given")
      Given.obj().list().toJson(writer, customScalarAdapters, value.given)
    }
  }

  public object Received : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.Received> {
    public val RESPONSE_NAMES: List<String> = listOf("user", "content", "hidden")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.Received {
      var _user: com.cyberconnect.link3.fragment.RecommendationBlock.User? = null
      var _content: String? = null
      var _hidden: Boolean? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _user = User.obj().fromJson(reader, customScalarAdapters)
          1 -> _content = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _hidden = BooleanAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.Received(
        user = _user!!,
        content = _content!!,
        hidden = _hidden!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.Received,
    ): Unit {
      writer.name("user")
      User.obj().toJson(writer, customScalarAdapters, value.user)

      writer.name("content")
      StringAdapter.toJson(writer, customScalarAdapters, value.content)

      writer.name("hidden")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.hidden)
    }
  }

  public object User : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.User> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "lightInfo", "profile")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.User {
      var _id: String? = null
      var _lightInfo: com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo? = null
      var _profile: com.cyberconnect.link3.fragment.RecommendationBlock.Profile? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _lightInfo = LightInfo.obj().fromJson(reader, customScalarAdapters)
          2 -> _profile = Profile.obj(true).nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.User(
        id = _id!!,
        lightInfo = _lightInfo!!,
        profile = _profile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.User,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("lightInfo")
      LightInfo.obj().toJson(writer, customScalarAdapters, value.lightInfo)

      writer.name("profile")
      Profile.obj(true).nullable().toJson(writer, customScalarAdapters, value.profile)
    }
  }

  public object LightInfo : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("handle", "avatar", "displayName",
        "formattedAddress", "attestation")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo {
      var _handle: String? = null
      var _avatar: String? = null
      var _displayName: String? = null
      var _formattedAddress: String? = null
      var _attestation: com.cyberconnect.link3.fragment.RecommendationBlock.Attestation? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _handle = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _avatar = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _formattedAddress = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _attestation = Attestation.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo(
        handle = _handle!!,
        avatar = _avatar!!,
        displayName = _displayName!!,
        formattedAddress = _formattedAddress!!,
        attestation = _attestation
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo,
    ): Unit {
      writer.name("handle")
      StringAdapter.toJson(writer, customScalarAdapters, value.handle)

      writer.name("avatar")
      StringAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("formattedAddress")
      StringAdapter.toJson(writer, customScalarAdapters, value.formattedAddress)

      writer.name("attestation")
      Attestation.obj().nullable().toJson(writer, customScalarAdapters, value.attestation)
    }
  }

  public object Attestation :
      Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.Attestation> {
    public val RESPONSE_NAMES: List<String> = listOf("uid")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.Attestation {
      var _uid: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _uid = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.Attestation(
        uid = _uid!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.Attestation,
    ): Unit {
      writer.name("uid")
      StringAdapter.toJson(writer, customScalarAdapters, value.uid)
    }
  }

  public object Profile : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.Profile> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.Profile {
      var __typename: String? = null
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onPerProfile: com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPerProfile = com.cyberconnect.link3.fragment.RecommendationBlockImpl_ResponseAdapter.OnPerProfile.fromJson(reader,
            customScalarAdapters)
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.Profile(
        __typename = __typename,
        id = _id!!,
        onPerProfile = _onPerProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.Profile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      if (value.onPerProfile != null) {
        com.cyberconnect.link3.fragment.RecommendationBlockImpl_ResponseAdapter.OnPerProfile.toJson(writer,
            customScalarAdapters, value.onPerProfile)
      }
    }
  }

  public object OnPerProfile :
      Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("headline", "isVerified")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile {
      var _headline: com.cyberconnect.link3.fragment.RecommendationBlock.Headline? = null
      var _isVerified: Boolean? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _headline = Headline.obj().fromJson(reader, customScalarAdapters)
          1 -> _isVerified = BooleanAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile(
        headline = _headline!!,
        isVerified = _isVerified!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile,
    ): Unit {
      writer.name("headline")
      Headline.obj().toJson(writer, customScalarAdapters, value.headline)

      writer.name("isVerified")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.isVerified)
    }
  }

  public object Headline : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.Headline> {
    public val RESPONSE_NAMES: List<String> = listOf("twitterId", "twitterHandle", "displayName",
        "avatar", "title", "profileId")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.Headline {
      var _twitterId: String? = null
      var _twitterHandle: String? = null
      var _displayName: String? = null
      var _avatar: Any? = null
      var _title: String? = null
      var _profileId: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _twitterId = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _twitterHandle = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _avatar = AnyAdapter.fromJson(reader, customScalarAdapters)
          4 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          5 -> _profileId = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.Headline(
        twitterId = _twitterId!!,
        twitterHandle = _twitterHandle!!,
        displayName = _displayName!!,
        avatar = _avatar!!,
        title = _title!!,
        profileId = _profileId
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.Headline,
    ): Unit {
      writer.name("twitterId")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterId)

      writer.name("twitterHandle")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterHandle)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("avatar")
      AnyAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("profileId")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.profileId)
    }
  }

  public object Given : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.Given> {
    public val RESPONSE_NAMES: List<String> = listOf("user", "content", "hidden")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.Given {
      var _user: com.cyberconnect.link3.fragment.RecommendationBlock.User1? = null
      var _content: String? = null
      var _hidden: Boolean? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _user = User1.obj().fromJson(reader, customScalarAdapters)
          1 -> _content = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _hidden = BooleanAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.Given(
        user = _user!!,
        content = _content!!,
        hidden = _hidden!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.Given,
    ): Unit {
      writer.name("user")
      User1.obj().toJson(writer, customScalarAdapters, value.user)

      writer.name("content")
      StringAdapter.toJson(writer, customScalarAdapters, value.content)

      writer.name("hidden")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.hidden)
    }
  }

  public object User1 : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.User1> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "lightInfo", "profile")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.User1 {
      var _id: String? = null
      var _lightInfo: com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo1? = null
      var _profile: com.cyberconnect.link3.fragment.RecommendationBlock.Profile1? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _lightInfo = LightInfo1.obj().fromJson(reader, customScalarAdapters)
          2 -> _profile = Profile1.obj(true).nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.User1(
        id = _id!!,
        lightInfo = _lightInfo!!,
        profile = _profile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.User1,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("lightInfo")
      LightInfo1.obj().toJson(writer, customScalarAdapters, value.lightInfo)

      writer.name("profile")
      Profile1.obj(true).nullable().toJson(writer, customScalarAdapters, value.profile)
    }
  }

  public object LightInfo1 : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo1>
      {
    public val RESPONSE_NAMES: List<String> = listOf("handle", "avatar", "displayName",
        "formattedAddress", "attestation")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo1 {
      var _handle: String? = null
      var _avatar: String? = null
      var _displayName: String? = null
      var _formattedAddress: String? = null
      var _attestation: com.cyberconnect.link3.fragment.RecommendationBlock.Attestation1? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _handle = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _avatar = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _formattedAddress = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _attestation = Attestation1.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo1(
        handle = _handle!!,
        avatar = _avatar!!,
        displayName = _displayName!!,
        formattedAddress = _formattedAddress!!,
        attestation = _attestation
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.LightInfo1,
    ): Unit {
      writer.name("handle")
      StringAdapter.toJson(writer, customScalarAdapters, value.handle)

      writer.name("avatar")
      StringAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("formattedAddress")
      StringAdapter.toJson(writer, customScalarAdapters, value.formattedAddress)

      writer.name("attestation")
      Attestation1.obj().nullable().toJson(writer, customScalarAdapters, value.attestation)
    }
  }

  public object Attestation1 :
      Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.Attestation1> {
    public val RESPONSE_NAMES: List<String> = listOf("uid")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.Attestation1 {
      var _uid: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _uid = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.Attestation1(
        uid = _uid!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.Attestation1,
    ): Unit {
      writer.name("uid")
      StringAdapter.toJson(writer, customScalarAdapters, value.uid)
    }
  }

  public object Profile1 : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.Profile1> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.Profile1 {
      var __typename: String? = null
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onPerProfile: com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile1? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPerProfile = com.cyberconnect.link3.fragment.RecommendationBlockImpl_ResponseAdapter.OnPerProfile1.fromJson(reader,
            customScalarAdapters)
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.Profile1(
        __typename = __typename,
        id = _id!!,
        onPerProfile = _onPerProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.Profile1,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      if (value.onPerProfile != null) {
        com.cyberconnect.link3.fragment.RecommendationBlockImpl_ResponseAdapter.OnPerProfile1.toJson(writer,
            customScalarAdapters, value.onPerProfile)
      }
    }
  }

  public object OnPerProfile1 :
      Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile1> {
    public val RESPONSE_NAMES: List<String> = listOf("headline", "isVerified")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile1 {
      var _headline: com.cyberconnect.link3.fragment.RecommendationBlock.Headline1? = null
      var _isVerified: Boolean? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _headline = Headline1.obj().fromJson(reader, customScalarAdapters)
          1 -> _isVerified = BooleanAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile1(
        headline = _headline!!,
        isVerified = _isVerified!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.OnPerProfile1,
    ): Unit {
      writer.name("headline")
      Headline1.obj().toJson(writer, customScalarAdapters, value.headline)

      writer.name("isVerified")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.isVerified)
    }
  }

  public object Headline1 : Adapter<com.cyberconnect.link3.fragment.RecommendationBlock.Headline1> {
    public val RESPONSE_NAMES: List<String> = listOf("twitterId", "twitterHandle", "displayName",
        "avatar", "title", "profileId")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.RecommendationBlock.Headline1 {
      var _twitterId: String? = null
      var _twitterHandle: String? = null
      var _displayName: String? = null
      var _avatar: Any? = null
      var _title: String? = null
      var _profileId: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _twitterId = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _twitterHandle = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _avatar = AnyAdapter.fromJson(reader, customScalarAdapters)
          4 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          5 -> _profileId = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.RecommendationBlock.Headline1(
        twitterId = _twitterId!!,
        twitterHandle = _twitterHandle!!,
        displayName = _displayName!!,
        avatar = _avatar!!,
        title = _title!!,
        profileId = _profileId
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.RecommendationBlock.Headline1,
    ): Unit {
      writer.name("twitterId")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterId)

      writer.name("twitterHandle")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterHandle)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("avatar")
      AnyAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("profileId")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.profileId)
    }
  }
}
