//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.cyberconnect.link3.type.VerificationStatus
import com.cyberconnect.link3.type.adapter.VerificationStatus_ResponseAdapter
import kotlin.Boolean
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object ProfileInTrendingImpl_ResponseAdapter {
  public object ProfileInTrending : Adapter<com.cyberconnect.link3.fragment.ProfileInTrending> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.ProfileInTrending {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onPerProfile: com.cyberconnect.link3.fragment.ProfileInTrending.OnPerProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPerProfile = com.cyberconnect.link3.fragment.ProfileInTrendingImpl_ResponseAdapter.OnPerProfile.fromJson(reader,
            customScalarAdapters)
      }

      var _onOrgProfile: com.cyberconnect.link3.fragment.ProfileInTrending.OnOrgProfile? = null
      if (possibleTypes("OrgProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onOrgProfile = com.cyberconnect.link3.fragment.ProfileInTrendingImpl_ResponseAdapter.OnOrgProfile.fromJson(reader,
            customScalarAdapters)
      }

      reader.rewind()
      val _unionBaseProfile = com.cyberconnect.link3.fragment.UnionBaseProfileImpl_ResponseAdapter.UnionBaseProfile.fromJson(reader,
          customScalarAdapters)

      return com.cyberconnect.link3.fragment.ProfileInTrending(
        __typename = __typename,
        onPerProfile = _onPerProfile,
        onOrgProfile = _onOrgProfile,
        unionBaseProfile = _unionBaseProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.ProfileInTrending,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.onPerProfile != null) {
        com.cyberconnect.link3.fragment.ProfileInTrendingImpl_ResponseAdapter.OnPerProfile.toJson(writer,
            customScalarAdapters, value.onPerProfile)
      }

      if (value.onOrgProfile != null) {
        com.cyberconnect.link3.fragment.ProfileInTrendingImpl_ResponseAdapter.OnOrgProfile.toJson(writer,
            customScalarAdapters, value.onOrgProfile)
      }

      com.cyberconnect.link3.fragment.UnionBaseProfileImpl_ResponseAdapter.UnionBaseProfile.toJson(writer,
          customScalarAdapters, value.unionBaseProfile)
    }
  }

  public object OnPerProfile :
      Adapter<com.cyberconnect.link3.fragment.ProfileInTrending.OnPerProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("isFollowing")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.ProfileInTrending.OnPerProfile {
      var _isFollowing: Boolean? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _isFollowing = BooleanAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.ProfileInTrending.OnPerProfile(
        isFollowing = _isFollowing!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.ProfileInTrending.OnPerProfile,
    ): Unit {
      writer.name("isFollowing")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.isFollowing)
    }
  }

  public object OnOrgProfile :
      Adapter<com.cyberconnect.link3.fragment.ProfileInTrending.OnOrgProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("isFollowing", "organization")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.ProfileInTrending.OnOrgProfile {
      var _isFollowing: Boolean? = null
      var _organization: com.cyberconnect.link3.fragment.ProfileInTrending.Organization? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _isFollowing = BooleanAdapter.fromJson(reader, customScalarAdapters)
          1 -> _organization = Organization.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.ProfileInTrending.OnOrgProfile(
        isFollowing = _isFollowing!!,
        organization = _organization!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.ProfileInTrending.OnOrgProfile,
    ): Unit {
      writer.name("isFollowing")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.isFollowing)

      writer.name("organization")
      Organization.obj().toJson(writer, customScalarAdapters, value.organization)
    }
  }

  public object Organization :
      Adapter<com.cyberconnect.link3.fragment.ProfileInTrending.Organization> {
    public val RESPONSE_NAMES: List<String> = listOf("verification")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.ProfileInTrending.Organization {
      var _verification: VerificationStatus? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _verification = VerificationStatus_ResponseAdapter.fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.ProfileInTrending.Organization(
        verification = _verification!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.ProfileInTrending.Organization,
    ): Unit {
      writer.name("verification")
      VerificationStatus_ResponseAdapter.toJson(writer, customScalarAdapters, value.verification)
    }
  }
}
