//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.GetEventFilterDataQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetEventFilterDataQuery_ResponseAdapter {
  public object Data : Adapter<GetEventFilterDataQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("countExploreEvents")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetEventFilterDataQuery.Data {
      var _countExploreEvents: GetEventFilterDataQuery.CountExploreEvents? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _countExploreEvents = CountExploreEvents.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetEventFilterDataQuery.Data(
        countExploreEvents = _countExploreEvents!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetEventFilterDataQuery.Data,
    ): Unit {
      writer.name("countExploreEvents")
      CountExploreEvents.obj().toJson(writer, customScalarAdapters, value.countExploreEvents)
    }
  }

  public object CountExploreEvents : Adapter<GetEventFilterDataQuery.CountExploreEvents> {
    public val RESPONSE_NAMES: List<String> = listOf("DiscordEventsCount", "LanguageEventsCount",
        "RaffleEventsCount", "TagEventsCount", "TwitterEventsCount", "W3STEventsCount")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetEventFilterDataQuery.CountExploreEvents {
      var _DiscordEventsCount: Int? = null
      var _LanguageEventsCount: List<String>? = null
      var _RaffleEventsCount: Int? = null
      var _TagEventsCount: List<String>? = null
      var _TwitterEventsCount: Int? = null
      var _W3STEventsCount: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _DiscordEventsCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          1 -> _LanguageEventsCount = StringAdapter.list().nullable().fromJson(reader,
              customScalarAdapters)
          2 -> _RaffleEventsCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          3 -> _TagEventsCount = StringAdapter.list().nullable().fromJson(reader,
              customScalarAdapters)
          4 -> _TwitterEventsCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          5 -> _W3STEventsCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetEventFilterDataQuery.CountExploreEvents(
        DiscordEventsCount = _DiscordEventsCount,
        LanguageEventsCount = _LanguageEventsCount,
        RaffleEventsCount = _RaffleEventsCount,
        TagEventsCount = _TagEventsCount,
        TwitterEventsCount = _TwitterEventsCount,
        W3STEventsCount = _W3STEventsCount
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetEventFilterDataQuery.CountExploreEvents,
    ): Unit {
      writer.name("DiscordEventsCount")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.DiscordEventsCount)

      writer.name("LanguageEventsCount")
      StringAdapter.list().nullable().toJson(writer, customScalarAdapters,
          value.LanguageEventsCount)

      writer.name("RaffleEventsCount")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.RaffleEventsCount)

      writer.name("TagEventsCount")
      StringAdapter.list().nullable().toJson(writer, customScalarAdapters, value.TagEventsCount)

      writer.name("TwitterEventsCount")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.TwitterEventsCount)

      writer.name("W3STEventsCount")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.W3STEventsCount)
    }
  }
}
