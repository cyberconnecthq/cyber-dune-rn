//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.fragment.selections.PriceSelections
import com.cyberconnect.link3.type.Attestation
import com.cyberconnect.link3.type.Attestation_Status
import com.cyberconnect.link3.type.Attestation_Type
import com.cyberconnect.link3.type.Block
import com.cyberconnect.link3.type.BlockType
import com.cyberconnect.link3.type.ChatUser
import com.cyberconnect.link3.type.CyberId
import com.cyberconnect.link3.type.DmCreditAccount
import com.cyberconnect.link3.type.EVMAddress
import com.cyberconnect.link3.type.GraphQLBoolean
import com.cyberconnect.link3.type.GraphQLID
import com.cyberconnect.link3.type.GraphQLInt
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.HeadlineType
import com.cyberconnect.link3.type.Identity
import com.cyberconnect.link3.type.LightInfo
import com.cyberconnect.link3.type.MeResponse
import com.cyberconnect.link3.type.MeResponse_Status
import com.cyberconnect.link3.type.PersonalDisplayName
import com.cyberconnect.link3.type.PersonalDisplayName_Type
import com.cyberconnect.link3.type.PointAccount
import com.cyberconnect.link3.type.PrivateInfo
import com.cyberconnect.link3.type.Profile
import com.cyberconnect.link3.type.TokenValue
import com.cyberconnect.link3.type.TurnkeyUserInfo
import com.cyberconnect.link3.type.Twitter
import com.cyberconnect.link3.type.Url
import com.cyberconnect.link3.type.User
import com.cyberconnect.link3.type.V3Credit
import com.cyberconnect.link3.type.V3UserInfo
import kotlin.collections.List

public object HeaderQuerySelections {
  private val __totalEarned: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "value",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "decimal",
          type = GraphQLInt.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "currency",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __displayName: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "type",
          type = PersonalDisplayName_Type.type.notNull()
        ).build()
      )

  private val __headline: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "avatar",
          type = Url.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "title",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterHandle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "headlineType",
          type = HeadlineType.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "followersCount",
          type = GraphQLInt.type.notNull()
        ).build()
      )

  private val __headline1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "avatar",
          type = Url.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "title",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterHandle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "headlineType",
          type = HeadlineType.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "followersCount",
          type = GraphQLInt.type.notNull()
        ).build()
      )

  private val __attestation: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "uid",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "status",
          type = Attestation_Status.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "type",
          type = Attestation_Type.type.notNull()
        ).build()
      )

  private val __identities: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "headline",
          type = Twitter.type.notNull()
        ).selections(__headline1)
        .build(),
        CompiledField.Builder(
          name = "attestation",
          type = Attestation.type
        ).selections(__attestation)
        .build()
      )

  private val __blocks: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "type",
          type = BlockType.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "isPlaceHolder",
          type = GraphQLBoolean.type.notNull()
        ).build()
      )

  private val __onPerProfile: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "handle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = PersonalDisplayName.type.notNull()
        ).selections(__displayName)
        .build(),
        CompiledField.Builder(
          name = "headline",
          type = Twitter.type.notNull()
        ).selections(__headline)
        .build(),
        CompiledField.Builder(
          name = "isVerified",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "identities",
          type = Identity.type.notNull().list()
        ).selections(__identities)
        .build(),
        CompiledField.Builder(
          name = "blocks",
          type = Block.type.notNull().list().notNull()
        ).selections(__blocks)
        .build()
      )

  private val __profile: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "PerProfile",
          possibleTypes = listOf("PerProfile")
        ).selections(__onPerProfile)
        .build()
      )

  private val __attestation1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "uid",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "status",
          type = Attestation_Status.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "type",
          type = Attestation_Type.type.notNull()
        ).build()
      )

  private val __lightInfo: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "avatar",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "formattedAddress",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "handle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "avatarFrameTokenId",
          type = GraphQLID.type
        ).build(),
        CompiledField.Builder(
          name = "attestation",
          type = Attestation.type
        ).selections(__attestation1)
        .build()
      )

  private val __privateInfo: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "address",
          type = EVMAddress.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "discordId",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterId",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterAuthorized",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "accessToken",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "email",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "v3SdkToken",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "linkedinId",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "githubId",
          type = GraphQLID.type.notNull()
        ).build()
      )

  private val __credits: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "balance",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "decimals",
          type = GraphQLInt.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "pending",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "locked",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __v3Info: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "cyberAccount",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "credits",
          type = V3Credit.type.notNull().list().notNull()
        ).selections(__credits)
        .build()
      )

  private val __cyberIds: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "tokenId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "handle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "isPrimary",
          type = GraphQLBoolean.type.notNull()
        ).build()
      )

  private val __turnkeyUserInfo: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "subOrgId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "turnkeyUserId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "username",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __creditBalance: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "value",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "decimal",
          type = GraphQLInt.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "currency",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __chatUser: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "creditBalance",
          type = TokenValue.type.notNull()
        ).selections(__creditBalance)
        .build()
      )

  private val __balance1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "TokenValue",
          possibleTypes = listOf("TokenValue")
        ).selections(PriceSelections.__root)
        .build()
      )

  private val __nonWithdrawableBalance: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "TokenValue",
          possibleTypes = listOf("TokenValue")
        ).selections(PriceSelections.__root)
        .build()
      )

  private val __withdrawableBalance: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "TokenValue",
          possibleTypes = listOf("TokenValue")
        ).selections(PriceSelections.__root)
        .build()
      )

  private val __dmCreditAccount: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "balance",
          type = TokenValue.type.notNull()
        ).selections(__balance1)
        .build(),
        CompiledField.Builder(
          name = "nonWithdrawableBalance",
          type = TokenValue.type.notNull()
        ).selections(__nonWithdrawableBalance)
        .build(),
        CompiledField.Builder(
          name = "withdrawableBalance",
          type = TokenValue.type.notNull()
        ).selections(__withdrawableBalance)
        .build()
      )

  private val __pointAccount: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "totalPoints",
          type = GraphQLInt.type.notNull()
        ).build()
      )

  private val __data: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "totalEarned",
          type = TokenValue.type.notNull()
        ).selections(__totalEarned)
        .build(),
        CompiledField.Builder(
          name = "profile",
          type = Profile.type
        ).selections(__profile)
        .build(),
        CompiledField.Builder(
          name = "lightInfo",
          type = LightInfo.type.notNull()
        ).selections(__lightInfo)
        .build(),
        CompiledField.Builder(
          name = "privateInfo",
          type = PrivateInfo.type
        ).selections(__privateInfo)
        .build(),
        CompiledField.Builder(
          name = "v3Info",
          type = V3UserInfo.type
        ).selections(__v3Info)
        .build(),
        CompiledField.Builder(
          name = "cyberIds",
          type = CyberId.type.notNull().list().notNull()
        ).selections(__cyberIds)
        .build(),
        CompiledField.Builder(
          name = "turnkeyUserInfo",
          type = TurnkeyUserInfo.type
        ).selections(__turnkeyUserInfo)
        .build(),
        CompiledField.Builder(
          name = "chatUser",
          type = ChatUser.type
        ).selections(__chatUser)
        .build(),
        CompiledField.Builder(
          name = "dmCreditAccount",
          type = DmCreditAccount.type.notNull()
        ).selections(__dmCreditAccount)
        .build(),
        CompiledField.Builder(
          name = "pointAccount",
          type = PointAccount.type.notNull()
        ).selections(__pointAccount)
        .build()
      )

  private val __me: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "status",
          type = MeResponse_Status.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "message",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "data",
          type = User.type
        ).selections(__data)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "me",
          type = MeResponse.type.notNull()
        ).selections(__me)
        .build()
      )
}
