//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.GetExploreDataQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetExploreDataQuery_ResponseAdapter {
  public object Data : Adapter<GetExploreDataQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("featuredEvents")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetExploreDataQuery.Data {
      var _featuredEvents: List<GetExploreDataQuery.FeaturedEvent>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _featuredEvents = FeaturedEvent.obj(true).list().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return GetExploreDataQuery.Data(
        featuredEvents = _featuredEvents!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetExploreDataQuery.Data,
    ): Unit {
      writer.name("featuredEvents")
      FeaturedEvent.obj(true).list().toJson(writer, customScalarAdapters, value.featuredEvents)
    }
  }

  public object FeaturedEvent : Adapter<GetExploreDataQuery.FeaturedEvent> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetExploreDataQuery.FeaturedEvent {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _posterEventCard = com.cyberconnect.link3.fragment.PosterEventCardImpl_ResponseAdapter.PosterEventCard.fromJson(reader,
          customScalarAdapters)

      return GetExploreDataQuery.FeaturedEvent(
        __typename = __typename!!,
        posterEventCard = _posterEventCard
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetExploreDataQuery.FeaturedEvent,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.PosterEventCardImpl_ResponseAdapter.PosterEventCard.toJson(writer,
          customScalarAdapters, value.posterEventCard)
    }
  }
}
