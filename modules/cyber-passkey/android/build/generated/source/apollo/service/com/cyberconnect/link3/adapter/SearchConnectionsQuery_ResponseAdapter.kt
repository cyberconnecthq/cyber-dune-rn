//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.SearchConnectionsQuery
import kotlin.String
import kotlin.Unit

public object SearchConnectionsQuery_ResponseAdapter {
  public object Data : Adapter<SearchConnectionsQuery.Data> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("SearchConnections")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchConnectionsQuery.Data {
      var _SearchConnections: SearchConnectionsQuery.SearchConnections? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _SearchConnections = SearchConnections.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SearchConnectionsQuery.Data(
        SearchConnections = _SearchConnections!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchConnectionsQuery.Data,
    ): Unit {
      writer.name("SearchConnections")
      SearchConnections.obj().toJson(writer, customScalarAdapters, value.SearchConnections)
    }
  }

  public object SearchConnections : Adapter<SearchConnectionsQuery.SearchConnections> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("pageInfo", "list")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchConnectionsQuery.SearchConnections {
      var _pageInfo: SearchConnectionsQuery.PageInfo? = null
      var _list: kotlin.collections.List<SearchConnectionsQuery.List>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _pageInfo = PageInfo.obj(true).fromJson(reader, customScalarAdapters)
          1 -> _list = List.obj(true).list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SearchConnectionsQuery.SearchConnections(
        pageInfo = _pageInfo!!,
        list = _list!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchConnectionsQuery.SearchConnections,
    ): Unit {
      writer.name("pageInfo")
      PageInfo.obj(true).toJson(writer, customScalarAdapters, value.pageInfo)

      writer.name("list")
      List.obj(true).list().toJson(writer, customScalarAdapters, value.list)
    }
  }

  public object PageInfo : Adapter<SearchConnectionsQuery.PageInfo> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchConnectionsQuery.PageInfo {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _pageInfo = com.cyberconnect.link3.fragment.PageInfoImpl_ResponseAdapter.PageInfo.fromJson(reader,
          customScalarAdapters)

      return SearchConnectionsQuery.PageInfo(
        __typename = __typename!!,
        pageInfo = _pageInfo
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchConnectionsQuery.PageInfo,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.PageInfoImpl_ResponseAdapter.PageInfo.toJson(writer,
          customScalarAdapters, value.pageInfo)
    }
  }

  public object List : Adapter<SearchConnectionsQuery.List> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchConnectionsQuery.List {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _myConnectionItem = com.cyberconnect.link3.fragment.MyConnectionItemImpl_ResponseAdapter.MyConnectionItem.fromJson(reader,
          customScalarAdapters)

      return SearchConnectionsQuery.List(
        __typename = __typename!!,
        myConnectionItem = _myConnectionItem
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchConnectionsQuery.List,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.MyConnectionItemImpl_ResponseAdapter.MyConnectionItem.toJson(writer,
          customScalarAdapters, value.myConnectionItem)
    }
  }
}
