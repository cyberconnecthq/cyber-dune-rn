//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.type.Role
import com.cyberconnect.link3.type.VerificationStatus
import com.cyberconnect.link3.type.adapter.Role_ResponseAdapter
import com.cyberconnect.link3.type.adapter.VerificationStatus_ResponseAdapter
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object OrganizerImpl_ResponseAdapter {
  public object Organizer : Adapter<com.cyberconnect.link3.fragment.Organizer> {
    public val RESPONSE_NAMES: List<String> = listOf("twitterId", "id", "followersCount",
        "verification", "currentAccess", "lightInfo")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.Organizer {
      var _twitterId: String? = null
      var _id: String? = null
      var _followersCount: Int? = null
      var _verification: VerificationStatus? = null
      var _currentAccess: Role? = null
      var _lightInfo: com.cyberconnect.link3.fragment.Organizer.LightInfo? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _twitterId = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _followersCount = IntAdapter.fromJson(reader, customScalarAdapters)
          3 -> _verification = VerificationStatus_ResponseAdapter.fromJson(reader,
              customScalarAdapters)
          4 -> _currentAccess = Role_ResponseAdapter.fromJson(reader, customScalarAdapters)
          5 -> _lightInfo = LightInfo.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.Organizer(
        twitterId = _twitterId!!,
        id = _id!!,
        followersCount = _followersCount!!,
        verification = _verification!!,
        currentAccess = _currentAccess!!,
        lightInfo = _lightInfo!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.Organizer,
    ): Unit {
      writer.name("twitterId")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterId)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("followersCount")
      IntAdapter.toJson(writer, customScalarAdapters, value.followersCount)

      writer.name("verification")
      VerificationStatus_ResponseAdapter.toJson(writer, customScalarAdapters, value.verification)

      writer.name("currentAccess")
      Role_ResponseAdapter.toJson(writer, customScalarAdapters, value.currentAccess)

      writer.name("lightInfo")
      LightInfo.obj().toJson(writer, customScalarAdapters, value.lightInfo)
    }
  }

  public object LightInfo : Adapter<com.cyberconnect.link3.fragment.Organizer.LightInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("isFollowing", "displayName", "profilePicture",
        "profileHandle")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.Organizer.LightInfo {
      var _isFollowing: Boolean? = null
      var _displayName: String? = null
      var _profilePicture: String? = null
      var _profileHandle: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _isFollowing = BooleanAdapter.fromJson(reader, customScalarAdapters)
          1 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _profilePicture = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _profileHandle = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.Organizer.LightInfo(
        isFollowing = _isFollowing!!,
        displayName = _displayName!!,
        profilePicture = _profilePicture!!,
        profileHandle = _profileHandle!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.Organizer.LightInfo,
    ): Unit {
      writer.name("isFollowing")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.isFollowing)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("profilePicture")
      StringAdapter.toJson(writer, customScalarAdapters, value.profilePicture)

      writer.name("profileHandle")
      StringAdapter.toJson(writer, customScalarAdapters, value.profileHandle)
    }
  }
}
