//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.fragment.selections.PosterEventCardSelections
import com.cyberconnect.link3.type.Event
import com.cyberconnect.link3.type.GraphQLString
import kotlin.collections.List

public object GetExploreDataQuerySelections {
  private val __exploreEvents: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Event",
          possibleTypes = listOf("Event")
        ).selections(PosterEventCardSelections.__root)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "exploreEvents",
          type = Event.type.notNull().list().notNull()
        ).alias("featuredEvents")
        .arguments(listOf(
          CompiledArgument.Builder("request", mapOf(
            "type" to "FEATURED"
          )).build()
        ))
        .selections(__exploreEvents)
        .build()
      )
}
