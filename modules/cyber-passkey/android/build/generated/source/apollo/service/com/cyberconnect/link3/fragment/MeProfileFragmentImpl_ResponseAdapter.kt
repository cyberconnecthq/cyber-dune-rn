//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.cyberconnect.link3.type.PersonalPicture_Type
import com.cyberconnect.link3.type.ProfileType
import com.cyberconnect.link3.type.adapter.PersonalPicture_Type_ResponseAdapter
import com.cyberconnect.link3.type.adapter.ProfileType_ResponseAdapter
import kotlin.Any
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object MeProfileFragmentImpl_ResponseAdapter {
  public object MeProfileFragment : Adapter<com.cyberconnect.link3.fragment.MeProfileFragment> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id", "handle", "type")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MeProfileFragment {
      var __typename: String? = null
      var _id: String? = null
      var _handle: String? = null
      var _type: ProfileType? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _handle = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _type = ProfileType_ResponseAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onOrgProfile: com.cyberconnect.link3.fragment.MeProfileFragment.OnOrgProfile? = null
      if (possibleTypes("OrgProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onOrgProfile = com.cyberconnect.link3.fragment.MeProfileFragmentImpl_ResponseAdapter.OnOrgProfile.fromJson(reader,
            customScalarAdapters)
      }

      var _onPerProfile: com.cyberconnect.link3.fragment.MeProfileFragment.OnPerProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPerProfile = com.cyberconnect.link3.fragment.MeProfileFragmentImpl_ResponseAdapter.OnPerProfile.fromJson(reader,
            customScalarAdapters)
      }

      return com.cyberconnect.link3.fragment.MeProfileFragment(
        __typename = __typename,
        id = _id!!,
        handle = _handle!!,
        type = _type!!,
        onOrgProfile = _onOrgProfile,
        onPerProfile = _onPerProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MeProfileFragment,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("handle")
      StringAdapter.toJson(writer, customScalarAdapters, value.handle)

      writer.name("type")
      ProfileType_ResponseAdapter.toJson(writer, customScalarAdapters, value.type)

      if (value.onOrgProfile != null) {
        com.cyberconnect.link3.fragment.MeProfileFragmentImpl_ResponseAdapter.OnOrgProfile.toJson(writer,
            customScalarAdapters, value.onOrgProfile)
      }

      if (value.onPerProfile != null) {
        com.cyberconnect.link3.fragment.MeProfileFragmentImpl_ResponseAdapter.OnPerProfile.toJson(writer,
            customScalarAdapters, value.onPerProfile)
      }
    }
  }

  public object OnOrgProfile :
      Adapter<com.cyberconnect.link3.fragment.MeProfileFragment.OnOrgProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("displayName", "profilePicture",
        "organization")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MeProfileFragment.OnOrgProfile {
      var _displayName: String? = null
      var _profilePicture: String? = null
      var _organization: com.cyberconnect.link3.fragment.MeProfileFragment.Organization? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _profilePicture = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _organization = Organization.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MeProfileFragment.OnOrgProfile(
        displayName = _displayName!!,
        profilePicture = _profilePicture!!,
        organization = _organization!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MeProfileFragment.OnOrgProfile,
    ): Unit {
      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("profilePicture")
      StringAdapter.toJson(writer, customScalarAdapters, value.profilePicture)

      writer.name("organization")
      Organization.obj().toJson(writer, customScalarAdapters, value.organization)
    }
  }

  public object Organization :
      Adapter<com.cyberconnect.link3.fragment.MeProfileFragment.Organization> {
    public val RESPONSE_NAMES: List<String> = listOf("followersCount")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MeProfileFragment.Organization {
      var _followersCount: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _followersCount = IntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MeProfileFragment.Organization(
        followersCount = _followersCount!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MeProfileFragment.Organization,
    ): Unit {
      writer.name("followersCount")
      IntAdapter.toJson(writer, customScalarAdapters, value.followersCount)
    }
  }

  public object OnPerProfile :
      Adapter<com.cyberconnect.link3.fragment.MeProfileFragment.OnPerProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("avatarFrameTokenId", "headline",
        "personaldisplayName", "personalProfilePicture", "personalBackgroundPicture")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MeProfileFragment.OnPerProfile {
      var _avatarFrameTokenId: String? = null
      var _headline: com.cyberconnect.link3.fragment.MeProfileFragment.Headline? = null
      var _personaldisplayName: com.cyberconnect.link3.fragment.MeProfileFragment.PersonaldisplayName? = null
      var _personalProfilePicture: com.cyberconnect.link3.fragment.MeProfileFragment.PersonalProfilePicture? = null
      var _personalBackgroundPicture: com.cyberconnect.link3.fragment.MeProfileFragment.PersonalBackgroundPicture? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _avatarFrameTokenId = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _headline = Headline.obj().fromJson(reader, customScalarAdapters)
          2 -> _personaldisplayName = PersonaldisplayName.obj().fromJson(reader,
              customScalarAdapters)
          3 -> _personalProfilePicture = PersonalProfilePicture.obj().fromJson(reader,
              customScalarAdapters)
          4 -> _personalBackgroundPicture = PersonalBackgroundPicture.obj().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MeProfileFragment.OnPerProfile(
        avatarFrameTokenId = _avatarFrameTokenId,
        headline = _headline!!,
        personaldisplayName = _personaldisplayName!!,
        personalProfilePicture = _personalProfilePicture!!,
        personalBackgroundPicture = _personalBackgroundPicture!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MeProfileFragment.OnPerProfile,
    ): Unit {
      writer.name("avatarFrameTokenId")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.avatarFrameTokenId)

      writer.name("headline")
      Headline.obj().toJson(writer, customScalarAdapters, value.headline)

      writer.name("personaldisplayName")
      PersonaldisplayName.obj().toJson(writer, customScalarAdapters, value.personaldisplayName)

      writer.name("personalProfilePicture")
      PersonalProfilePicture.obj().toJson(writer, customScalarAdapters,
          value.personalProfilePicture)

      writer.name("personalBackgroundPicture")
      PersonalBackgroundPicture.obj().toJson(writer, customScalarAdapters,
          value.personalBackgroundPicture)
    }
  }

  public object Headline : Adapter<com.cyberconnect.link3.fragment.MeProfileFragment.Headline> {
    public val RESPONSE_NAMES: List<String> = listOf("title", "avatar")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MeProfileFragment.Headline {
      var _title: String? = null
      var _avatar: Any? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _avatar = AnyAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MeProfileFragment.Headline(
        title = _title!!,
        avatar = _avatar!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MeProfileFragment.Headline,
    ): Unit {
      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("avatar")
      AnyAdapter.toJson(writer, customScalarAdapters, value.avatar)
    }
  }

  public object PersonaldisplayName :
      Adapter<com.cyberconnect.link3.fragment.MeProfileFragment.PersonaldisplayName> {
    public val RESPONSE_NAMES: List<String> = listOf("displayName")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MeProfileFragment.PersonaldisplayName {
      var _displayName: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MeProfileFragment.PersonaldisplayName(
        displayName = _displayName!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MeProfileFragment.PersonaldisplayName,
    ): Unit {
      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)
    }
  }

  public object PersonalProfilePicture :
      Adapter<com.cyberconnect.link3.fragment.MeProfileFragment.PersonalProfilePicture> {
    public val RESPONSE_NAMES: List<String> = listOf("picture")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MeProfileFragment.PersonalProfilePicture {
      var _picture: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _picture = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MeProfileFragment.PersonalProfilePicture(
        picture = _picture
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MeProfileFragment.PersonalProfilePicture,
    ): Unit {
      writer.name("picture")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.picture)
    }
  }

  public object PersonalBackgroundPicture :
      Adapter<com.cyberconnect.link3.fragment.MeProfileFragment.PersonalBackgroundPicture> {
    public val RESPONSE_NAMES: List<String> = listOf("picture", "type", "nfts")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MeProfileFragment.PersonalBackgroundPicture {
      var _picture: String? = null
      var _type: PersonalPicture_Type? = null
      var _nfts: List<com.cyberconnect.link3.fragment.MeProfileFragment.Nft>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _picture = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _type = PersonalPicture_Type_ResponseAdapter.fromJson(reader, customScalarAdapters)
          2 -> _nfts = Nft.obj(true).list().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MeProfileFragment.PersonalBackgroundPicture(
        picture = _picture,
        type = _type!!,
        nfts = _nfts
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MeProfileFragment.PersonalBackgroundPicture,
    ): Unit {
      writer.name("picture")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.picture)

      writer.name("type")
      PersonalPicture_Type_ResponseAdapter.toJson(writer, customScalarAdapters, value.type)

      writer.name("nfts")
      Nft.obj(true).list().nullable().toJson(writer, customScalarAdapters, value.nfts)
    }
  }

  public object Nft : Adapter<com.cyberconnect.link3.fragment.MeProfileFragment.Nft> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MeProfileFragment.Nft {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _nFT = com.cyberconnect.link3.fragment.NFTImpl_ResponseAdapter.NFT.fromJson(reader,
          customScalarAdapters)

      return com.cyberconnect.link3.fragment.MeProfileFragment.Nft(
        __typename = __typename!!,
        nFT = _nFT
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MeProfileFragment.Nft,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.NFTImpl_ResponseAdapter.NFT.toJson(writer,
          customScalarAdapters, value.nFT)
    }
  }
}
