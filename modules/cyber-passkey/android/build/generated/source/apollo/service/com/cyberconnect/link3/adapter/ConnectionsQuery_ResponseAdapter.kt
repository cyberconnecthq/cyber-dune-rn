//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.cyberconnect.link3.ConnectionsQuery
import com.cyberconnect.link3.fragment.ConnectionOrgProfile
import com.cyberconnect.link3.fragment.ConnectionPersonalProfile
import kotlin.Any
import kotlin.String
import kotlin.Unit

public object ConnectionsQuery_ResponseAdapter {
  public object Data : Adapter<ConnectionsQuery.Data> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("organization",
        "topProfiles", "me")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.Data {
      var _organization: ConnectionsQuery.Organization? = null
      var _topProfiles: ConnectionsQuery.TopProfiles? = null
      var _me: ConnectionsQuery.Me? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _organization = Organization.obj().fromJson(reader, customScalarAdapters)
          1 -> _topProfiles = TopProfiles.obj().fromJson(reader, customScalarAdapters)
          2 -> _me = Me.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConnectionsQuery.Data(
        organization = _organization!!,
        topProfiles = _topProfiles!!,
        me = _me!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.Data,
    ): Unit {
      writer.name("organization")
      Organization.obj().toJson(writer, customScalarAdapters, value.organization)

      writer.name("topProfiles")
      TopProfiles.obj().toJson(writer, customScalarAdapters, value.topProfiles)

      writer.name("me")
      Me.obj().toJson(writer, customScalarAdapters, value.me)
    }
  }

  public object Organization : Adapter<ConnectionsQuery.Organization> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("list")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.Organization {
      var _list: kotlin.collections.List<ConnectionsQuery.List>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _list = List.obj(true).list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConnectionsQuery.Organization(
        list = _list!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.Organization,
    ): Unit {
      writer.name("list")
      List.obj(true).list().toJson(writer, customScalarAdapters, value.list)
    }
  }

  public object List : Adapter<ConnectionsQuery.List> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.List {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _connectionOrgProfile: ConnectionOrgProfile? = null
      if (possibleTypes("OrgProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _connectionOrgProfile = com.cyberconnect.link3.fragment.ConnectionOrgProfileImpl_ResponseAdapter.ConnectionOrgProfile.fromJson(reader,
            customScalarAdapters)
      }

      return ConnectionsQuery.List(
        __typename = __typename,
        connectionOrgProfile = _connectionOrgProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.List,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.connectionOrgProfile != null) {
        com.cyberconnect.link3.fragment.ConnectionOrgProfileImpl_ResponseAdapter.ConnectionOrgProfile.toJson(writer,
            customScalarAdapters, value.connectionOrgProfile)
      }
    }
  }

  public object TopProfiles : Adapter<ConnectionsQuery.TopProfiles> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("list")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.TopProfiles {
      var _list: kotlin.collections.List<ConnectionsQuery.List1>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _list = List1.obj(true).list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConnectionsQuery.TopProfiles(
        list = _list!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.TopProfiles,
    ): Unit {
      writer.name("list")
      List1.obj(true).list().toJson(writer, customScalarAdapters, value.list)
    }
  }

  public object List1 : Adapter<ConnectionsQuery.List1> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.List1 {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _connectionPersonalProfile: ConnectionPersonalProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _connectionPersonalProfile = com.cyberconnect.link3.fragment.ConnectionPersonalProfileImpl_ResponseAdapter.ConnectionPersonalProfile.fromJson(reader,
            customScalarAdapters)
      }

      return ConnectionsQuery.List1(
        __typename = __typename,
        connectionPersonalProfile = _connectionPersonalProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.List1,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.connectionPersonalProfile != null) {
        com.cyberconnect.link3.fragment.ConnectionPersonalProfileImpl_ResponseAdapter.ConnectionPersonalProfile.toJson(writer,
            customScalarAdapters, value.connectionPersonalProfile)
      }
    }
  }

  public object Me : Adapter<ConnectionsQuery.Me> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("data")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.Me {
      var _data: ConnectionsQuery.Data1? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _data = Data1.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConnectionsQuery.Me(
        `data` = _data
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.Me,
    ): Unit {
      writer.name("data")
      Data1.obj().nullable().toJson(writer, customScalarAdapters, value.`data`)
    }
  }

  public object Data1 : Adapter<ConnectionsQuery.Data1> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("schoolmatesProfiles",
        "similarWorkExperiencesProfiles")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.Data1 {
      var _schoolmatesProfiles: kotlin.collections.List<ConnectionsQuery.SchoolmatesProfile>? = null
      var _similarWorkExperiencesProfiles: kotlin.collections.List<ConnectionsQuery.SimilarWorkExperiencesProfile>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _schoolmatesProfiles = SchoolmatesProfile.obj().list().fromJson(reader,
              customScalarAdapters)
          1 -> _similarWorkExperiencesProfiles = SimilarWorkExperiencesProfile.obj().list().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return ConnectionsQuery.Data1(
        schoolmatesProfiles = _schoolmatesProfiles!!,
        similarWorkExperiencesProfiles = _similarWorkExperiencesProfiles!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.Data1,
    ): Unit {
      writer.name("schoolmatesProfiles")
      SchoolmatesProfile.obj().list().toJson(writer, customScalarAdapters,
          value.schoolmatesProfiles)

      writer.name("similarWorkExperiencesProfiles")
      SimilarWorkExperiencesProfile.obj().list().toJson(writer, customScalarAdapters,
          value.similarWorkExperiencesProfiles)
    }
  }

  public object SchoolmatesProfile : Adapter<ConnectionsQuery.SchoolmatesProfile> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("orgList", "profile")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.SchoolmatesProfile {
      var _orgList: kotlin.collections.List<ConnectionsQuery.OrgList>? = null
      var _profile: ConnectionsQuery.Profile? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _orgList = OrgList.obj().list().fromJson(reader, customScalarAdapters)
          1 -> _profile = Profile.obj(true).fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConnectionsQuery.SchoolmatesProfile(
        orgList = _orgList!!,
        profile = _profile!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.SchoolmatesProfile,
    ): Unit {
      writer.name("orgList")
      OrgList.obj().list().toJson(writer, customScalarAdapters, value.orgList)

      writer.name("profile")
      Profile.obj(true).toJson(writer, customScalarAdapters, value.profile)
    }
  }

  public object OrgList : Adapter<ConnectionsQuery.OrgList> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("avatar", "name")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.OrgList {
      var _avatar: Any? = null
      var _name: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _avatar = AnyAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConnectionsQuery.OrgList(
        avatar = _avatar!!,
        name = _name!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.OrgList,
    ): Unit {
      writer.name("avatar")
      AnyAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)
    }
  }

  public object Profile : Adapter<ConnectionsQuery.Profile> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.Profile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _connectionPersonalProfile = com.cyberconnect.link3.fragment.ConnectionPersonalProfileImpl_ResponseAdapter.ConnectionPersonalProfile.fromJson(reader,
          customScalarAdapters)

      return ConnectionsQuery.Profile(
        __typename = __typename!!,
        connectionPersonalProfile = _connectionPersonalProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.Profile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.ConnectionPersonalProfileImpl_ResponseAdapter.ConnectionPersonalProfile.toJson(writer,
          customScalarAdapters, value.connectionPersonalProfile)
    }
  }

  public object SimilarWorkExperiencesProfile :
      Adapter<ConnectionsQuery.SimilarWorkExperiencesProfile> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("orgList", "profile")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.SimilarWorkExperiencesProfile {
      var _orgList: kotlin.collections.List<ConnectionsQuery.OrgList1>? = null
      var _profile: ConnectionsQuery.Profile1? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _orgList = OrgList1.obj().list().fromJson(reader, customScalarAdapters)
          1 -> _profile = Profile1.obj(true).fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConnectionsQuery.SimilarWorkExperiencesProfile(
        orgList = _orgList!!,
        profile = _profile!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.SimilarWorkExperiencesProfile,
    ): Unit {
      writer.name("orgList")
      OrgList1.obj().list().toJson(writer, customScalarAdapters, value.orgList)

      writer.name("profile")
      Profile1.obj(true).toJson(writer, customScalarAdapters, value.profile)
    }
  }

  public object OrgList1 : Adapter<ConnectionsQuery.OrgList1> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("avatar", "name")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.OrgList1 {
      var _avatar: Any? = null
      var _name: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _avatar = AnyAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConnectionsQuery.OrgList1(
        avatar = _avatar!!,
        name = _name!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.OrgList1,
    ): Unit {
      writer.name("avatar")
      AnyAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)
    }
  }

  public object Profile1 : Adapter<ConnectionsQuery.Profile1> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConnectionsQuery.Profile1 {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _connectionPersonalProfile = com.cyberconnect.link3.fragment.ConnectionPersonalProfileImpl_ResponseAdapter.ConnectionPersonalProfile.fromJson(reader,
          customScalarAdapters)

      return ConnectionsQuery.Profile1(
        __typename = __typename!!,
        connectionPersonalProfile = _connectionPersonalProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConnectionsQuery.Profile1,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.ConnectionPersonalProfileImpl_ResponseAdapter.ConnectionPersonalProfile.toJson(writer,
          customScalarAdapters, value.connectionPersonalProfile)
    }
  }
}
