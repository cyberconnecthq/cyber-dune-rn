//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.adapter.SearchProfilesQuery_ResponseAdapter
import com.cyberconnect.link3.adapter.SearchProfilesQuery_VariablesAdapter
import com.cyberconnect.link3.fragment.SearchOrgProfile
import com.cyberconnect.link3.fragment.SearchPerProfile
import com.cyberconnect.link3.selections.SearchProfilesQuerySelections
import com.cyberconnect.link3.type.SearchProfilesInput
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public data class SearchProfilesQuery(
  public val input: SearchProfilesInput,
) : Query<SearchProfilesQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    SearchProfilesQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = SearchProfilesQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cyberconnect.link3.type.Query.type
  )
  .selections(selections = SearchProfilesQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(SearchProfilesQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val searchProfiles: SearchProfiles,
  ) : Query.Data

  public data class SearchProfiles(
    public val profiles: List<Profile>,
    public val orgProfiles: List<OrgProfile>,
  )

  public data class Profile(
    public val __typename: String,
    /**
     * Synthetic field for 'SearchPerProfile'
     */
    public val searchPerProfile: SearchPerProfile?,
  )

  public data class OrgProfile(
    public val __typename: String,
    /**
     * Synthetic field for 'SearchOrgProfile'
     */
    public val searchOrgProfile: SearchOrgProfile?,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "bdd32a05ed3c4ec2d5bee59c1acac012314f1c917e8bfa857c764bb853319394"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query searchProfiles($input: SearchProfilesInput!) {
     *   searchProfiles(input: $input) {
     *     profiles {
     *       __typename
     *       ...SearchPerProfile
     *     }
     *     orgProfiles {
     *       __typename
     *       ...SearchOrgProfile
     *     }
     *   }
     * }
     *
     * fragment SearchPerProfile on PerProfile {
     *   id
     *   handle
     *   type
     *   __typename
     *   personalProfilePicture: profilePicture {
     *     picture
     *   }
     *   personalDisplayName: displayName {
     *     displayName
     *   }
     * }
     *
     * fragment SearchOrgProfile on OrgProfile {
     *   id
     *   handle
     *   type
     *   profilePicture
     *   displayName
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query searchProfiles(${'$'}input: SearchProfilesInput!) { searchProfiles(input: ${'$'}input) { profiles { __typename ...SearchPerProfile } orgProfiles { __typename ...SearchOrgProfile } } }  fragment SearchPerProfile on PerProfile { id handle type __typename personalProfilePicture: profilePicture { picture } personalDisplayName: displayName { displayName } }  fragment SearchOrgProfile on OrgProfile { id handle type profilePicture displayName }"

    public const val OPERATION_NAME: String = "searchProfiles"
  }
}
