//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.TurnkeyUserLoginQuery
import com.cyberconnect.link3.type.TurnkeyUserLoginResponse_Status
import com.cyberconnect.link3.type.adapter.TurnkeyUserLoginResponse_Status_ResponseAdapter
import kotlin.Any
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TurnkeyUserLoginQuery_ResponseAdapter {
  public object Data : Adapter<TurnkeyUserLoginQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("turnkeyUserLogin")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TurnkeyUserLoginQuery.Data {
      var _turnkeyUserLogin: TurnkeyUserLoginQuery.TurnkeyUserLogin? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _turnkeyUserLogin = TurnkeyUserLogin.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TurnkeyUserLoginQuery.Data(
        turnkeyUserLogin = _turnkeyUserLogin!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TurnkeyUserLoginQuery.Data,
    ): Unit {
      writer.name("turnkeyUserLogin")
      TurnkeyUserLogin.obj().toJson(writer, customScalarAdapters, value.turnkeyUserLogin)
    }
  }

  public object TurnkeyUserLogin : Adapter<TurnkeyUserLoginQuery.TurnkeyUserLogin> {
    public val RESPONSE_NAMES: List<String> = listOf("status", "user")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TurnkeyUserLoginQuery.TurnkeyUserLogin {
      var _status: TurnkeyUserLoginResponse_Status? = null
      var _user: TurnkeyUserLoginQuery.User? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _status = TurnkeyUserLoginResponse_Status_ResponseAdapter.fromJson(reader,
              customScalarAdapters)
          1 -> _user = User.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TurnkeyUserLoginQuery.TurnkeyUserLogin(
        status = _status!!,
        user = _user
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TurnkeyUserLoginQuery.TurnkeyUserLogin,
    ): Unit {
      writer.name("status")
      TurnkeyUserLoginResponse_Status_ResponseAdapter.toJson(writer, customScalarAdapters,
          value.status)

      writer.name("user")
      User.obj().nullable().toJson(writer, customScalarAdapters, value.user)
    }
  }

  public object User : Adapter<TurnkeyUserLoginQuery.User> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "privateInfo", "turnkeyUserInfo",
        "profile")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TurnkeyUserLoginQuery.User {
      var _id: String? = null
      var _privateInfo: TurnkeyUserLoginQuery.PrivateInfo? = null
      var _turnkeyUserInfo: TurnkeyUserLoginQuery.TurnkeyUserInfo? = null
      var _profile: TurnkeyUserLoginQuery.Profile? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _privateInfo = PrivateInfo.obj().nullable().fromJson(reader, customScalarAdapters)
          2 -> _turnkeyUserInfo = TurnkeyUserInfo.obj().nullable().fromJson(reader,
              customScalarAdapters)
          3 -> _profile = Profile.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TurnkeyUserLoginQuery.User(
        id = _id!!,
        privateInfo = _privateInfo,
        turnkeyUserInfo = _turnkeyUserInfo,
        profile = _profile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TurnkeyUserLoginQuery.User,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("privateInfo")
      PrivateInfo.obj().nullable().toJson(writer, customScalarAdapters, value.privateInfo)

      writer.name("turnkeyUserInfo")
      TurnkeyUserInfo.obj().nullable().toJson(writer, customScalarAdapters, value.turnkeyUserInfo)

      writer.name("profile")
      Profile.obj().nullable().toJson(writer, customScalarAdapters, value.profile)
    }
  }

  public object PrivateInfo : Adapter<TurnkeyUserLoginQuery.PrivateInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("accessToken", "address")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TurnkeyUserLoginQuery.PrivateInfo {
      var _accessToken: String? = null
      var _address: Any? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _accessToken = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _address = AnyAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TurnkeyUserLoginQuery.PrivateInfo(
        accessToken = _accessToken!!,
        address = _address!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TurnkeyUserLoginQuery.PrivateInfo,
    ): Unit {
      writer.name("accessToken")
      StringAdapter.toJson(writer, customScalarAdapters, value.accessToken)

      writer.name("address")
      AnyAdapter.toJson(writer, customScalarAdapters, value.address)
    }
  }

  public object TurnkeyUserInfo : Adapter<TurnkeyUserLoginQuery.TurnkeyUserInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("turnkeyUserId", "username", "subOrgId",
        "walletId", "recoveryEmail")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TurnkeyUserLoginQuery.TurnkeyUserInfo {
      var _turnkeyUserId: String? = null
      var _username: String? = null
      var _subOrgId: String? = null
      var _walletId: String? = null
      var _recoveryEmail: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _turnkeyUserId = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _username = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _subOrgId = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _walletId = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _recoveryEmail = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TurnkeyUserLoginQuery.TurnkeyUserInfo(
        turnkeyUserId = _turnkeyUserId!!,
        username = _username!!,
        subOrgId = _subOrgId!!,
        walletId = _walletId!!,
        recoveryEmail = _recoveryEmail
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TurnkeyUserLoginQuery.TurnkeyUserInfo,
    ): Unit {
      writer.name("turnkeyUserId")
      StringAdapter.toJson(writer, customScalarAdapters, value.turnkeyUserId)

      writer.name("username")
      StringAdapter.toJson(writer, customScalarAdapters, value.username)

      writer.name("subOrgId")
      StringAdapter.toJson(writer, customScalarAdapters, value.subOrgId)

      writer.name("walletId")
      StringAdapter.toJson(writer, customScalarAdapters, value.walletId)

      writer.name("recoveryEmail")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.recoveryEmail)
    }
  }

  public object Profile : Adapter<TurnkeyUserLoginQuery.Profile> {
    public val RESPONSE_NAMES: List<String> = listOf("handle")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TurnkeyUserLoginQuery.Profile {
      var _handle: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _handle = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TurnkeyUserLoginQuery.Profile(
        handle = _handle!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: TurnkeyUserLoginQuery.Profile,
    ): Unit {
      writer.name("handle")
      StringAdapter.toJson(writer, customScalarAdapters, value.handle)
    }
  }
}
