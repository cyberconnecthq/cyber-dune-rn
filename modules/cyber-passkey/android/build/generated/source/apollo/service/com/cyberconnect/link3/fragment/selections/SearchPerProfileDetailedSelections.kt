//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.type.Attestation
import com.cyberconnect.link3.type.GraphQLBoolean
import com.cyberconnect.link3.type.GraphQLID
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.LightInfo
import com.cyberconnect.link3.type.PersonalDisplayName
import com.cyberconnect.link3.type.PersonalPicture
import com.cyberconnect.link3.type.ProfileType
import com.cyberconnect.link3.type.Twitter
import com.cyberconnect.link3.type.User
import kotlin.collections.List

public object SearchPerProfileDetailedSelections {
  private val __profilePicture: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "picture",
          type = GraphQLString.type
        ).build()
      )

  private val __displayName: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __headline: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "twitterId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterHandle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "title",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "profileId",
          type = GraphQLID.type
        ).build()
      )

  private val __attestation: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "uid",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __lightInfo: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "attestation",
          type = Attestation.type
        ).selections(__attestation)
        .build()
      )

  private val __owner: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "lightInfo",
          type = LightInfo.type.notNull()
        ).selections(__lightInfo)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "handle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "type",
          type = ProfileType.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "profilePicture",
          type = PersonalPicture.type.notNull()
        ).alias("personalProfilePicture")
        .selections(__profilePicture)
        .build(),
        CompiledField.Builder(
          name = "displayName",
          type = PersonalDisplayName.type.notNull()
        ).alias("personalDisplayName")
        .selections(__displayName)
        .build(),
        CompiledField.Builder(
          name = "headline",
          type = Twitter.type.notNull()
        ).selections(__headline)
        .build(),
        CompiledField.Builder(
          name = "owner",
          type = User.type.notNull()
        ).selections(__owner)
        .build(),
        CompiledField.Builder(
          name = "isVerified",
          type = GraphQLBoolean.type.notNull()
        ).build()
      )
}
