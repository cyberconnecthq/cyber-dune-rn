//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.adapter.GetEventFilterDataQuery_ResponseAdapter
import com.cyberconnect.link3.selections.GetEventFilterDataQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class GetEventFilterDataQuery() : Query<GetEventFilterDataQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = GetEventFilterDataQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cyberconnect.link3.type.Query.type
  )
  .selections(selections = GetEventFilterDataQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(GetEventFilterDataQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val countExploreEvents: CountExploreEvents,
  ) : Query.Data

  public data class CountExploreEvents(
    public val DiscordEventsCount: Int?,
    public val LanguageEventsCount: List<String>?,
    public val RaffleEventsCount: Int?,
    public val TagEventsCount: List<String>?,
    public val TwitterEventsCount: Int?,
    public val W3STEventsCount: Int?,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "79f6475cdfb3f18dcb7440e4c1b95086a578155624fb09ba64b1b52464480a0e"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query getEventFilterData {
     *   countExploreEvents {
     *     DiscordEventsCount
     *     LanguageEventsCount
     *     RaffleEventsCount
     *     TagEventsCount
     *     TwitterEventsCount
     *     W3STEventsCount
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query getEventFilterData { countExploreEvents { DiscordEventsCount LanguageEventsCount RaffleEventsCount TagEventsCount TwitterEventsCount W3STEventsCount } }"

    public const val OPERATION_NAME: String = "getEventFilterData"
  }
}
