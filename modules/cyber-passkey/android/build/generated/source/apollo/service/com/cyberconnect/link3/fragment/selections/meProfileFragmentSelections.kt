//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.type.GraphQLID
import com.cyberconnect.link3.type.GraphQLInt
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.NFT
import com.cyberconnect.link3.type.Organization
import com.cyberconnect.link3.type.PersonalDisplayName
import com.cyberconnect.link3.type.PersonalPicture
import com.cyberconnect.link3.type.PersonalPicture_Type
import com.cyberconnect.link3.type.ProfileType
import com.cyberconnect.link3.type.Twitter
import com.cyberconnect.link3.type.Url
import kotlin.collections.List

public object meProfileFragmentSelections {
  private val __organization: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "followersCount",
          type = GraphQLInt.type.notNull()
        ).build()
      )

  private val __onOrgProfile: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "profilePicture",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "organization",
          type = Organization.type.notNull()
        ).selections(__organization)
        .build()
      )

  private val __headline: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "title",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "avatar",
          type = Url.type.notNull()
        ).build()
      )

  private val __displayName1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __profilePicture1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "picture",
          type = GraphQLString.type
        ).build()
      )

  private val __nfts: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "NFT",
          possibleTypes = listOf("NFT")
        ).selections(NFTSelections.__root)
        .build()
      )

  private val __backgroundPicture: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "picture",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "type",
          type = PersonalPicture_Type.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "nfts",
          type = NFT.type.notNull().list()
        ).selections(__nfts)
        .build()
      )

  private val __onPerProfile: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "avatarFrameTokenId",
          type = GraphQLID.type
        ).build(),
        CompiledField.Builder(
          name = "headline",
          type = Twitter.type.notNull()
        ).selections(__headline)
        .build(),
        CompiledField.Builder(
          name = "displayName",
          type = PersonalDisplayName.type.notNull()
        ).alias("personaldisplayName")
        .selections(__displayName1)
        .build(),
        CompiledField.Builder(
          name = "profilePicture",
          type = PersonalPicture.type.notNull()
        ).alias("personalProfilePicture")
        .selections(__profilePicture1)
        .build(),
        CompiledField.Builder(
          name = "backgroundPicture",
          type = PersonalPicture.type.notNull()
        ).alias("personalBackgroundPicture")
        .selections(__backgroundPicture)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "handle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "type",
          type = ProfileType.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "OrgProfile",
          possibleTypes = listOf("OrgProfile")
        ).selections(__onOrgProfile)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "PerProfile",
          possibleTypes = listOf("PerProfile")
        ).selections(__onPerProfile)
        .build()
      )
}
