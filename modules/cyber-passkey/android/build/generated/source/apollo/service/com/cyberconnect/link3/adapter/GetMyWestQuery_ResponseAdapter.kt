//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.GetMyWestQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit

public object GetMyWestQuery_ResponseAdapter {
  public object Data : Adapter<GetMyWestQuery.Data> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("me")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetMyWestQuery.Data {
      var _me: GetMyWestQuery.Me? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _me = Me.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetMyWestQuery.Data(
        me = _me!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetMyWestQuery.Data,
    ): Unit {
      writer.name("me")
      Me.obj().toJson(writer, customScalarAdapters, value.me)
    }
  }

  public object Me : Adapter<GetMyWestQuery.Me> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("data")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetMyWestQuery.Me {
      var _data: GetMyWestQuery.Data1? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _data = Data1.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetMyWestQuery.Me(
        `data` = _data
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetMyWestQuery.Me,
    ): Unit {
      writer.name("data")
      Data1.obj().nullable().toJson(writer, customScalarAdapters, value.`data`)
    }
  }

  public object Data1 : Adapter<GetMyWestQuery.Data1> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("myW3ST")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetMyWestQuery.Data1 {
      var _myW3ST: GetMyWestQuery.MyW3ST? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _myW3ST = MyW3ST.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetMyWestQuery.Data1(
        myW3ST = _myW3ST
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetMyWestQuery.Data1,
    ): Unit {
      writer.name("myW3ST")
      MyW3ST.obj().nullable().toJson(writer, customScalarAdapters, value.myW3ST)
    }
  }

  public object MyW3ST : Adapter<GetMyWestQuery.MyW3ST> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("pageInfo", "list")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetMyWestQuery.MyW3ST {
      var _pageInfo: GetMyWestQuery.PageInfo? = null
      var _list: kotlin.collections.List<GetMyWestQuery.List>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _pageInfo = PageInfo.obj(true).fromJson(reader, customScalarAdapters)
          1 -> _list = List.obj().list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetMyWestQuery.MyW3ST(
        pageInfo = _pageInfo!!,
        list = _list!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetMyWestQuery.MyW3ST,
    ): Unit {
      writer.name("pageInfo")
      PageInfo.obj(true).toJson(writer, customScalarAdapters, value.pageInfo)

      writer.name("list")
      List.obj().list().toJson(writer, customScalarAdapters, value.list)
    }
  }

  public object PageInfo : Adapter<GetMyWestQuery.PageInfo> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetMyWestQuery.PageInfo {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _pageInfo = com.cyberconnect.link3.fragment.PageInfoImpl_ResponseAdapter.PageInfo.fromJson(reader,
          customScalarAdapters)

      return GetMyWestQuery.PageInfo(
        __typename = __typename!!,
        pageInfo = _pageInfo
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetMyWestQuery.PageInfo,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.PageInfoImpl_ResponseAdapter.PageInfo.toJson(writer,
          customScalarAdapters, value.pageInfo)
    }
  }

  public object List : Adapter<GetMyWestQuery.List> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("tokenUri", "chainId",
        "version")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetMyWestQuery.List {
      var _tokenUri: String? = null
      var _chainId: Int? = null
      var _version: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _tokenUri = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _chainId = IntAdapter.fromJson(reader, customScalarAdapters)
          2 -> _version = IntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetMyWestQuery.List(
        tokenUri = _tokenUri!!,
        chainId = _chainId!!,
        version = _version!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetMyWestQuery.List,
    ): Unit {
      writer.name("tokenUri")
      StringAdapter.toJson(writer, customScalarAdapters, value.tokenUri)

      writer.name("chainId")
      IntAdapter.toJson(writer, customScalarAdapters, value.chainId)

      writer.name("version")
      IntAdapter.toJson(writer, customScalarAdapters, value.version)
    }
  }
}
