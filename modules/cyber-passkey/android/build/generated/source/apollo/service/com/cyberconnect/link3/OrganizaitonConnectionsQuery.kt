//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.adapter.OrganizaitonConnectionsQuery_ResponseAdapter
import com.cyberconnect.link3.adapter.OrganizaitonConnectionsQuery_VariablesAdapter
import com.cyberconnect.link3.fragment.ConnectionOrgProfile
import com.cyberconnect.link3.selections.OrganizaitonConnectionsQuerySelections
import kotlin.String
import kotlin.Unit

public data class OrganizaitonConnectionsQuery(
  public val after: Optional<String?> = Optional.Absent,
) : Query<OrganizaitonConnectionsQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    OrganizaitonConnectionsQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> =
      OrganizaitonConnectionsQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cyberconnect.link3.type.Query.type
  )
  .selections(selections = OrganizaitonConnectionsQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(OrganizaitonConnectionsQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val organization: Organization,
  ) : Query.Data

  public data class Organization(
    public val list: kotlin.collections.List<List>,
    public val pageInfo: PageInfo,
  )

  public data class List(
    public val __typename: String,
    /**
     * Synthetic field for 'ConnectionOrgProfile'
     */
    public val connectionOrgProfile: ConnectionOrgProfile?,
  )

  public data class PageInfo(
    public val __typename: String,
    /**
     * Synthetic field for 'PageInfo'
     */
    public val pageInfo: com.cyberconnect.link3.fragment.PageInfo,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "0b9bdfef75e410a3c96b4aa31ceccc6d885f3b8c8cdcda49fac6ba63fe5886d9"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query organizaitonConnections($after: String) {
     *   organization: featuredProfiles(filter: ORGANIZATION, first: 50, after: $after) {
     *     list {
     *       __typename
     *       ...ConnectionOrgProfile
     *     }
     *     pageInfo {
     *       __typename
     *       ...PageInfo
     *     }
     *   }
     * }
     *
     * fragment ConnectionOrgProfile on OrgProfile {
     *   id
     *   handle
     *   bio
     *   displayName
     *   profilePicture
     *   isFollowing
     *   organization {
     *     followersCount
     *   }
     * }
     *
     * fragment PageInfo on PageInfo {
     *   startCursor
     *   endCursor
     *   hasNextPage
     *   hasPreviousPage
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query organizaitonConnections(${'$'}after: String) { organization: featuredProfiles(filter: ORGANIZATION, first: 50, after: ${'$'}after) { list { __typename ...ConnectionOrgProfile } pageInfo { __typename ...PageInfo } } }  fragment ConnectionOrgProfile on OrgProfile { id handle bio displayName profilePicture isFollowing organization { followersCount } }  fragment PageInfo on PageInfo { startCursor endCursor hasNextPage hasPreviousPage }"

    public const val OPERATION_NAME: String = "organizaitonConnections"
  }
}
