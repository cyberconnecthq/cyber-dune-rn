//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.type.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.present
import com.cyberconnect.link3.type.UpdatePersonalInput
import kotlin.IllegalStateException
import kotlin.Unit

public object UpdatePersonalInput_InputAdapter : Adapter<UpdatePersonalInput> {
  public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      UpdatePersonalInput = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: UpdatePersonalInput,
  ): Unit {
    if (value.bio is Optional.Present) {
      writer.name("bio")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.bio)
    }
    if (value.displayName is Optional.Present) {
      writer.name("displayName")
      PersonalDisplayNameInput_InputAdapter.obj().nullable().present().toJson(writer,
          customScalarAdapters, value.displayName)
    }
    if (value.profilePicture is Optional.Present) {
      writer.name("profilePicture")
      PersonalPictureInput_InputAdapter.obj().nullable().present().toJson(writer,
          customScalarAdapters, value.profilePicture)
    }
    if (value.backgroundPicture is Optional.Present) {
      writer.name("backgroundPicture")
      PersonalPictureInput_InputAdapter.obj().nullable().present().toJson(writer,
          customScalarAdapters, value.backgroundPicture)
    }
    if (value.headline is Optional.Present) {
      writer.name("headline")
      TwitterInput_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.headline)
    }
    if (value.avatarFrameTokenId is Optional.Present) {
      writer.name("avatarFrameTokenId")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.avatarFrameTokenId)
    }
    if (value.languages is Optional.Present) {
      writer.name("languages")
      StringAdapter.list().nullable().present().toJson(writer, customScalarAdapters,
          value.languages)
    }
    if (value.region is Optional.Present) {
      writer.name("region")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.region)
    }
  }
}
