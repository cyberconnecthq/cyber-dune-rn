//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.fragment.selections.SearchOrgProfileDetailedSelections
import com.cyberconnect.link3.fragment.selections.SearchPerProfileDetailedSelections
import com.cyberconnect.link3.type.GraphQLBoolean
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.PageInfo
import com.cyberconnect.link3.type.Profile
import com.cyberconnect.link3.type.SearchProfilesResponse
import kotlin.collections.List

public object SearchProfilesDetailedQuerySelections {
  private val __profiles: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "PerProfile",
          possibleTypes = listOf("PerProfile")
        ).selections(SearchPerProfileDetailedSelections.__root)
        .build()
      )

  private val __orgProfiles: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "OrgProfile",
          possibleTypes = listOf("OrgProfile")
        ).selections(SearchOrgProfileDetailedSelections.__root)
        .build()
      )

  private val __pageInfo: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "startCursor",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "endCursor",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "hasNextPage",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "hasPreviousPage",
          type = GraphQLBoolean.type.notNull()
        ).build()
      )

  private val __searchProfiles: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "profiles",
          type = Profile.type.notNull().list().notNull()
        ).selections(__profiles)
        .build(),
        CompiledField.Builder(
          name = "orgProfiles",
          type = Profile.type.notNull().list().notNull()
        ).selections(__orgProfiles)
        .build(),
        CompiledField.Builder(
          name = "pageInfo",
          type = PageInfo.type.notNull()
        ).selections(__pageInfo)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "searchProfiles",
          type = SearchProfilesResponse.type.notNull()
        ).arguments(listOf(
          CompiledArgument.Builder("input", CompiledVariable("input")).build()
        ))
        .selections(__searchProfiles)
        .build()
      )
}
