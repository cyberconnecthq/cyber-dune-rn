//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.type.CreditOperation
import com.cyberconnect.link3.type.CreditSource
import com.cyberconnect.link3.type.CreditStatus
import com.cyberconnect.link3.type.GraphQLBoolean
import com.cyberconnect.link3.type.GraphQLID
import com.cyberconnect.link3.type.GraphQLInt
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.LightInfo
import com.cyberconnect.link3.type.TokenValue
import com.cyberconnect.link3.type.User
import kotlin.collections.List

public object CreditHistoryRowSelections {
  private val __lightInfo: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "avatar",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "profileId",
          type = GraphQLID.type.notNull()
        ).build()
      )

  private val __chatUser: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "lightInfo",
          type = LightInfo.type.notNull()
        ).selections(__lightInfo)
        .build()
      )

  private val __value: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "TokenValue",
          possibleTypes = listOf("TokenValue")
        ).selections(PriceSelections.__root)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "chatUser",
          type = User.type
        ).selections(__chatUser)
        .build(),
        CompiledField.Builder(
          name = "confirmed",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "operation",
          type = CreditOperation.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "status",
          type = CreditStatus.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "source",
          type = CreditSource.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "value",
          type = TokenValue.type.notNull()
        ).selections(__value)
        .build(),
        CompiledField.Builder(
          name = "time",
          type = GraphQLInt.type.notNull()
        ).build()
      )
}
