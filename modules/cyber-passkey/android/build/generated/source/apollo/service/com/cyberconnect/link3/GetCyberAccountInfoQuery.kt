//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.adapter.GetCyberAccountInfoQuery_ResponseAdapter
import com.cyberconnect.link3.fragment.Price
import com.cyberconnect.link3.selections.GetCyberAccountInfoQuerySelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class GetCyberAccountInfoQuery() : Query<GetCyberAccountInfoQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = GetCyberAccountInfoQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cyberconnect.link3.type.Query.type
  )
  .selections(selections = GetCyberAccountInfoQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(GetCyberAccountInfoQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val me: Me,
  ) : Query.Data

  public data class Me(
    public val `data`: Data1?,
  )

  public data class Data1(
    public val v3Info: V3Info?,
    public val totalEarned: TotalEarned,
    public val dmCreditAccount: DmCreditAccount,
    public val pointAccount: PointAccount,
  )

  public data class V3Info(
    public val cyberAccount: String,
    public val credits: List<Credit>,
  )

  public data class Credit(
    public val decimals: Int,
    public val balance: String,
    public val pending: String,
    public val locked: String,
  )

  public data class TotalEarned(
    public val __typename: String,
    /**
     * Synthetic field for 'Price'
     */
    public val price: Price,
  )

  public data class DmCreditAccount(
    public val balance: Balance,
    public val nonWithdrawableBalance: NonWithdrawableBalance,
    public val withdrawableBalance: WithdrawableBalance,
  )

  public data class Balance(
    public val __typename: String,
    /**
     * Synthetic field for 'Price'
     */
    public val price: Price,
  )

  public data class NonWithdrawableBalance(
    public val __typename: String,
    /**
     * Synthetic field for 'Price'
     */
    public val price: Price,
  )

  public data class WithdrawableBalance(
    public val __typename: String,
    /**
     * Synthetic field for 'Price'
     */
    public val price: Price,
  )

  public data class PointAccount(
    public val totalPoints: Int,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "e8d12e8c391e03c8c920c78f2253474a15ac0f693fb7406f221beb9398813553"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query getCyberAccountInfo {
     *   me {
     *     data {
     *       v3Info {
     *         cyberAccount
     *         credits {
     *           decimals
     *           balance
     *           pending
     *           locked
     *         }
     *       }
     *       totalEarned {
     *         __typename
     *         ...Price
     *       }
     *       dmCreditAccount {
     *         balance {
     *           __typename
     *           ...Price
     *         }
     *         nonWithdrawableBalance {
     *           __typename
     *           ...Price
     *         }
     *         withdrawableBalance {
     *           __typename
     *           ...Price
     *         }
     *       }
     *       pointAccount {
     *         totalPoints
     *       }
     *     }
     *   }
     * }
     *
     * fragment Price on TokenValue {
     *   currency
     *   decimal
     *   value
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query getCyberAccountInfo { me { data { v3Info { cyberAccount credits { decimals balance pending locked } } totalEarned { __typename ...Price } dmCreditAccount { balance { __typename ...Price } nonWithdrawableBalance { __typename ...Price } withdrawableBalance { __typename ...Price } } pointAccount { totalPoints } } } }  fragment Price on TokenValue { currency decimal value }"

    public const val OPERATION_NAME: String = "getCyberAccountInfo"
  }
}
