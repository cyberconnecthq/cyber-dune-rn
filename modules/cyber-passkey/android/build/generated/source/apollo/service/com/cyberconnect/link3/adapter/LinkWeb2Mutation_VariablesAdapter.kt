//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.present
import com.cyberconnect.link3.LinkWeb2Mutation
import com.cyberconnect.link3.type.adapter.LinkedInOAuth_InputAdapter
import com.cyberconnect.link3.type.adapter.LoginType_ResponseAdapter
import com.cyberconnect.link3.type.adapter.TwitterOAuth_InputAdapter
import kotlin.IllegalStateException
import kotlin.Unit

public object LinkWeb2Mutation_VariablesAdapter : Adapter<LinkWeb2Mutation> {
  public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      LinkWeb2Mutation = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: LinkWeb2Mutation,
  ): Unit {
    writer.name("type")
    LoginType_ResponseAdapter.toJson(writer, customScalarAdapters, value.type)
    if (value.email is Optional.Present) {
      writer.name("email")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.email)
    }
    writer.name("token")
    StringAdapter.toJson(writer, customScalarAdapters, value.token)
    writer.name("twitterOAuthCode")
    TwitterOAuth_InputAdapter.obj().toJson(writer, customScalarAdapters, value.twitterOAuthCode)
    if (value.linkedInOAuth is Optional.Present) {
      writer.name("linkedInOAuth")
      LinkedInOAuth_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.linkedInOAuth)
    }
  }
}
