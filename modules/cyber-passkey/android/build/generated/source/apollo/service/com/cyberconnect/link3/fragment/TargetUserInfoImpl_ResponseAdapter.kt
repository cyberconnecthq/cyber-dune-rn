//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object TargetUserInfoImpl_ResponseAdapter {
  public object TargetUserInfo : Adapter<com.cyberconnect.link3.fragment.TargetUserInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "lightInfo", "profile")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserInfo {
      var _id: String? = null
      var _lightInfo: com.cyberconnect.link3.fragment.TargetUserInfo.LightInfo? = null
      var _profile: com.cyberconnect.link3.fragment.TargetUserInfo.Profile? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _lightInfo = LightInfo.obj().fromJson(reader, customScalarAdapters)
          2 -> _profile = Profile.obj(true).nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.TargetUserInfo(
        id = _id!!,
        lightInfo = _lightInfo!!,
        profile = _profile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserInfo,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("lightInfo")
      LightInfo.obj().toJson(writer, customScalarAdapters, value.lightInfo)

      writer.name("profile")
      Profile.obj(true).nullable().toJson(writer, customScalarAdapters, value.profile)
    }
  }

  public object LightInfo : Adapter<com.cyberconnect.link3.fragment.TargetUserInfo.LightInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("handle", "avatar", "displayName",
        "formattedAddress", "attestation", "remark")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserInfo.LightInfo {
      var _handle: String? = null
      var _avatar: String? = null
      var _displayName: String? = null
      var _formattedAddress: String? = null
      var _attestation: com.cyberconnect.link3.fragment.TargetUserInfo.Attestation? = null
      var _remark: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _handle = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _avatar = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _formattedAddress = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _attestation = Attestation.obj().nullable().fromJson(reader, customScalarAdapters)
          5 -> _remark = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.TargetUserInfo.LightInfo(
        handle = _handle!!,
        avatar = _avatar!!,
        displayName = _displayName!!,
        formattedAddress = _formattedAddress!!,
        attestation = _attestation,
        remark = _remark!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserInfo.LightInfo,
    ): Unit {
      writer.name("handle")
      StringAdapter.toJson(writer, customScalarAdapters, value.handle)

      writer.name("avatar")
      StringAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("formattedAddress")
      StringAdapter.toJson(writer, customScalarAdapters, value.formattedAddress)

      writer.name("attestation")
      Attestation.obj().nullable().toJson(writer, customScalarAdapters, value.attestation)

      writer.name("remark")
      StringAdapter.toJson(writer, customScalarAdapters, value.remark)
    }
  }

  public object Attestation : Adapter<com.cyberconnect.link3.fragment.TargetUserInfo.Attestation> {
    public val RESPONSE_NAMES: List<String> = listOf("uid")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserInfo.Attestation {
      var _uid: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _uid = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.TargetUserInfo.Attestation(
        uid = _uid!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserInfo.Attestation,
    ): Unit {
      writer.name("uid")
      StringAdapter.toJson(writer, customScalarAdapters, value.uid)
    }
  }

  public object Profile : Adapter<com.cyberconnect.link3.fragment.TargetUserInfo.Profile> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserInfo.Profile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _targetUserProfile: TargetUserProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _targetUserProfile = com.cyberconnect.link3.fragment.TargetUserProfileImpl_ResponseAdapter.TargetUserProfile.fromJson(reader,
            customScalarAdapters)
      }

      return com.cyberconnect.link3.fragment.TargetUserInfo.Profile(
        __typename = __typename,
        targetUserProfile = _targetUserProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserInfo.Profile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.targetUserProfile != null) {
        com.cyberconnect.link3.fragment.TargetUserProfileImpl_ResponseAdapter.TargetUserProfile.toJson(writer,
            customScalarAdapters, value.targetUserProfile)
      }
    }
  }
}
