//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.type.GraphQLBoolean
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.JoinRaffleResponse
import com.cyberconnect.link3.type.JoinRaffleResponse_Status
import com.cyberconnect.link3.type.RaffleRequirements
import com.cyberconnect.link3.type.RaffleRequirements_TwitterToFollow
import kotlin.collections.List

public object JoinEventRaffleMutationSelections {
  private val __twittersToFollow: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "twitterId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterHandle",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __requirement: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "retweet",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "follow",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "likeAndRetweet",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "tag",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "comment",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "whitelist",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "attend",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twittersToFollow",
          type = RaffleRequirements_TwitterToFollow.type.notNull().list().notNull()
        ).selections(__twittersToFollow)
        .build()
      )

  private val __joinRaffle: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "status",
          type = JoinRaffleResponse_Status.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "requirement",
          type = RaffleRequirements.type.notNull()
        ).selections(__requirement)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "joinRaffle",
          type = JoinRaffleResponse.type.notNull()
        ).arguments(listOf(
          CompiledArgument.Builder("eventId", CompiledVariable("eventId")).build(),
          CompiledArgument.Builder("nonce", CompiledVariable("nonce")).build(),
          CompiledArgument.Builder("token", CompiledVariable("token")).build(),
          CompiledArgument.Builder("verifier", CompiledVariable("verifier")).build()
        ))
        .selections(__joinRaffle)
        .build()
      )
}
