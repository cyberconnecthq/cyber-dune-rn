//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object NFTBlockImpl_ResponseAdapter {
  public object NFTBlock : Adapter<com.cyberconnect.link3.fragment.NFTBlock> {
    public val RESPONSE_NAMES: List<String> = listOf("nfts")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.NFTBlock {
      var _nfts: List<com.cyberconnect.link3.fragment.NFTBlock.Nft>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _nfts = Nft.obj(true).list().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.NFTBlock(
        nfts = _nfts
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.NFTBlock,
    ): Unit {
      writer.name("nfts")
      Nft.obj(true).list().nullable().toJson(writer, customScalarAdapters, value.nfts)
    }
  }

  public object Nft : Adapter<com.cyberconnect.link3.fragment.NFTBlock.Nft> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.NFTBlock.Nft {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _blockNFTFragment = com.cyberconnect.link3.fragment.BlockNFTFragmentImpl_ResponseAdapter.BlockNFTFragment.fromJson(reader,
          customScalarAdapters)

      return com.cyberconnect.link3.fragment.NFTBlock.Nft(
        __typename = __typename!!,
        blockNFTFragment = _blockNFTFragment
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.NFTBlock.Nft,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.BlockNFTFragmentImpl_ResponseAdapter.BlockNFTFragment.toJson(writer,
          customScalarAdapters, value.blockNFTFragment)
    }
  }
}
