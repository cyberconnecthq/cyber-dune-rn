//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.type.HeadlineType
import com.cyberconnect.link3.type.adapter.HeadlineType_ResponseAdapter
import kotlin.Any
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object EducationBlockImpl_ResponseAdapter {
  public object EducationBlock : Adapter<com.cyberconnect.link3.fragment.EducationBlock> {
    public val RESPONSE_NAMES: List<String> = listOf("educations")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.EducationBlock {
      var _educations: List<com.cyberconnect.link3.fragment.EducationBlock.Education>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _educations = Education.obj().list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.EducationBlock(
        educations = _educations!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.EducationBlock,
    ): Unit {
      writer.name("educations")
      Education.obj().list().toJson(writer, customScalarAdapters, value.educations)
    }
  }

  public object Education : Adapter<com.cyberconnect.link3.fragment.EducationBlock.Education> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "startDate", "endDate", "description",
        "degree", "fieldOfStudy", "school")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.EducationBlock.Education {
      var _id: String? = null
      var _startDate: Int? = null
      var _endDate: Int? = null
      var _description: String? = null
      var _degree: String? = null
      var _fieldOfStudy: String? = null
      var _school: com.cyberconnect.link3.fragment.EducationBlock.School? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _startDate = IntAdapter.fromJson(reader, customScalarAdapters)
          2 -> _endDate = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          3 -> _description = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _degree = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          5 -> _fieldOfStudy = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          6 -> _school = School.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.EducationBlock.Education(
        id = _id!!,
        startDate = _startDate!!,
        endDate = _endDate,
        description = _description!!,
        degree = _degree,
        fieldOfStudy = _fieldOfStudy,
        school = _school!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.EducationBlock.Education,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("startDate")
      IntAdapter.toJson(writer, customScalarAdapters, value.startDate)

      writer.name("endDate")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.endDate)

      writer.name("description")
      StringAdapter.toJson(writer, customScalarAdapters, value.description)

      writer.name("degree")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.degree)

      writer.name("fieldOfStudy")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.fieldOfStudy)

      writer.name("school")
      School.obj().toJson(writer, customScalarAdapters, value.school)
    }
  }

  public object School : Adapter<com.cyberconnect.link3.fragment.EducationBlock.School> {
    public val RESPONSE_NAMES: List<String> = listOf("twitterId", "twitterHandle", "displayName",
        "avatar", "title", "description", "profileId", "followersCount", "headlineType")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.EducationBlock.School {
      var _twitterId: String? = null
      var _twitterHandle: String? = null
      var _displayName: String? = null
      var _avatar: Any? = null
      var _title: String? = null
      var _description: String? = null
      var _profileId: String? = null
      var _followersCount: Int? = null
      var _headlineType: HeadlineType? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _twitterId = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _twitterHandle = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _avatar = AnyAdapter.fromJson(reader, customScalarAdapters)
          4 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          5 -> _description = StringAdapter.fromJson(reader, customScalarAdapters)
          6 -> _profileId = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          7 -> _followersCount = IntAdapter.fromJson(reader, customScalarAdapters)
          8 -> _headlineType = HeadlineType_ResponseAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.EducationBlock.School(
        twitterId = _twitterId!!,
        twitterHandle = _twitterHandle!!,
        displayName = _displayName!!,
        avatar = _avatar!!,
        title = _title!!,
        description = _description!!,
        profileId = _profileId,
        followersCount = _followersCount!!,
        headlineType = _headlineType!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.EducationBlock.School,
    ): Unit {
      writer.name("twitterId")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterId)

      writer.name("twitterHandle")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterHandle)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("avatar")
      AnyAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("description")
      StringAdapter.toJson(writer, customScalarAdapters, value.description)

      writer.name("profileId")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.profileId)

      writer.name("followersCount")
      IntAdapter.toJson(writer, customScalarAdapters, value.followersCount)

      writer.name("headlineType")
      HeadlineType_ResponseAdapter.toJson(writer, customScalarAdapters, value.headlineType)
    }
  }
}
