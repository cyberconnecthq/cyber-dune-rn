//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.ReplyMutation
import com.cyberconnect.link3.type.PublishReplyResponse_Status
import com.cyberconnect.link3.type.adapter.PublishReplyResponse_Status_ResponseAdapter
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object ReplyMutation_ResponseAdapter {
  public object Data : Adapter<ReplyMutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("publishReply")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ReplyMutation.Data {
      var _publishReply: ReplyMutation.PublishReply? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _publishReply = PublishReply.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ReplyMutation.Data(
        publishReply = _publishReply!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ReplyMutation.Data,
    ): Unit {
      writer.name("publishReply")
      PublishReply.obj().toJson(writer, customScalarAdapters, value.publishReply)
    }
  }

  public object PublishReply : Adapter<ReplyMutation.PublishReply> {
    public val RESPONSE_NAMES: List<String> = listOf("status", "contentId")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ReplyMutation.PublishReply {
      var _status: PublishReplyResponse_Status? = null
      var _contentId: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _status = PublishReplyResponse_Status_ResponseAdapter.fromJson(reader,
              customScalarAdapters)
          1 -> _contentId = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ReplyMutation.PublishReply(
        status = _status!!,
        contentId = _contentId!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ReplyMutation.PublishReply,
    ): Unit {
      writer.name("status")
      PublishReplyResponse_Status_ResponseAdapter.toJson(writer, customScalarAdapters, value.status)

      writer.name("contentId")
      StringAdapter.toJson(writer, customScalarAdapters, value.contentId)
    }
  }
}
