//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.LoginMutation
import com.cyberconnect.link3.type.LoginResponse_Status
import com.cyberconnect.link3.type.adapter.LoginResponse_Status_ResponseAdapter
import kotlin.Any
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object LoginMutation_ResponseAdapter {
  public object Data : Adapter<LoginMutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("login")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LoginMutation.Data {
      var _login: LoginMutation.Login? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _login = Login.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LoginMutation.Data(
        login = _login!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LoginMutation.Data,
    ): Unit {
      writer.name("login")
      Login.obj().toJson(writer, customScalarAdapters, value.login)
    }
  }

  public object Login : Adapter<LoginMutation.Login> {
    public val RESPONSE_NAMES: List<String> = listOf("status", "message", "data")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LoginMutation.Login {
      var _status: LoginResponse_Status? = null
      var _message: String? = null
      var _data: LoginMutation.Data1? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _status = LoginResponse_Status_ResponseAdapter.fromJson(reader, customScalarAdapters)
          1 -> _message = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _data = Data1.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LoginMutation.Login(
        status = _status!!,
        message = _message!!,
        `data` = _data
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LoginMutation.Login,
    ): Unit {
      writer.name("status")
      LoginResponse_Status_ResponseAdapter.toJson(writer, customScalarAdapters, value.status)

      writer.name("message")
      StringAdapter.toJson(writer, customScalarAdapters, value.message)

      writer.name("data")
      Data1.obj().nullable().toJson(writer, customScalarAdapters, value.`data`)
    }
  }

  public object Data1 : Adapter<LoginMutation.Data1> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "privateInfo")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LoginMutation.Data1 {
      var _id: String? = null
      var _privateInfo: LoginMutation.PrivateInfo? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _privateInfo = PrivateInfo.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LoginMutation.Data1(
        id = _id!!,
        privateInfo = _privateInfo
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LoginMutation.Data1,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("privateInfo")
      PrivateInfo.obj().nullable().toJson(writer, customScalarAdapters, value.privateInfo)
    }
  }

  public object PrivateInfo : Adapter<LoginMutation.PrivateInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("address", "accessToken")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LoginMutation.PrivateInfo {
      var _address: Any? = null
      var _accessToken: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _address = AnyAdapter.fromJson(reader, customScalarAdapters)
          1 -> _accessToken = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LoginMutation.PrivateInfo(
        address = _address!!,
        accessToken = _accessToken!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LoginMutation.PrivateInfo,
    ): Unit {
      writer.name("address")
      AnyAdapter.toJson(writer, customScalarAdapters, value.address)

      writer.name("accessToken")
      StringAdapter.toJson(writer, customScalarAdapters, value.accessToken)
    }
  }
}
