//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.cyberconnect.link3.HomePageDataQuery
import com.cyberconnect.link3.fragment.ConnectionOrgProfile
import com.cyberconnect.link3.fragment.ConnectionPersonalProfile
import kotlin.String
import kotlin.Unit

public object HomePageDataQuery_ResponseAdapter {
  public object Data : Adapter<HomePageDataQuery.Data> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("organization",
        "recommended", "profiles", "exploreEvents", "explorePosts")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.Data {
      var _organization: HomePageDataQuery.Organization? = null
      var _recommended: HomePageDataQuery.Recommended? = null
      var _profiles: HomePageDataQuery.Profiles? = null
      var _exploreEvents: kotlin.collections.List<HomePageDataQuery.ExploreEvent>? = null
      var _explorePosts: kotlin.collections.List<HomePageDataQuery.ExplorePost>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _organization = Organization.obj().fromJson(reader, customScalarAdapters)
          1 -> _recommended = Recommended.obj().fromJson(reader, customScalarAdapters)
          2 -> _profiles = Profiles.obj().fromJson(reader, customScalarAdapters)
          3 -> _exploreEvents = ExploreEvent.obj(true).list().fromJson(reader, customScalarAdapters)
          4 -> _explorePosts = ExplorePost.obj(true).list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return HomePageDataQuery.Data(
        organization = _organization!!,
        recommended = _recommended!!,
        profiles = _profiles!!,
        exploreEvents = _exploreEvents!!,
        explorePosts = _explorePosts
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.Data,
    ): Unit {
      writer.name("organization")
      Organization.obj().toJson(writer, customScalarAdapters, value.organization)

      writer.name("recommended")
      Recommended.obj().toJson(writer, customScalarAdapters, value.recommended)

      writer.name("profiles")
      Profiles.obj().toJson(writer, customScalarAdapters, value.profiles)

      writer.name("exploreEvents")
      ExploreEvent.obj(true).list().toJson(writer, customScalarAdapters, value.exploreEvents)

      writer.name("explorePosts")
      ExplorePost.obj(true).list().nullable().toJson(writer, customScalarAdapters,
          value.explorePosts)
    }
  }

  public object Organization : Adapter<HomePageDataQuery.Organization> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("list")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.Organization {
      var _list: kotlin.collections.List<HomePageDataQuery.List>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _list = List.obj(true).list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HomePageDataQuery.Organization(
        list = _list!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.Organization,
    ): Unit {
      writer.name("list")
      List.obj(true).list().toJson(writer, customScalarAdapters, value.list)
    }
  }

  public object List : Adapter<HomePageDataQuery.List> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.List {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _connectionOrgProfile: ConnectionOrgProfile? = null
      if (possibleTypes("OrgProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _connectionOrgProfile = com.cyberconnect.link3.fragment.ConnectionOrgProfileImpl_ResponseAdapter.ConnectionOrgProfile.fromJson(reader,
            customScalarAdapters)
      }

      return HomePageDataQuery.List(
        __typename = __typename,
        connectionOrgProfile = _connectionOrgProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.List,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.connectionOrgProfile != null) {
        com.cyberconnect.link3.fragment.ConnectionOrgProfileImpl_ResponseAdapter.ConnectionOrgProfile.toJson(writer,
            customScalarAdapters, value.connectionOrgProfile)
      }
    }
  }

  public object Recommended : Adapter<HomePageDataQuery.Recommended> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("data")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.Recommended {
      var _data: HomePageDataQuery.Data1? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _data = Data1.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HomePageDataQuery.Recommended(
        `data` = _data
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.Recommended,
    ): Unit {
      writer.name("data")
      Data1.obj().nullable().toJson(writer, customScalarAdapters, value.`data`)
    }
  }

  public object Data1 : Adapter<HomePageDataQuery.Data1> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("recommendedProfiles")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.Data1 {
      var _recommendedProfiles: HomePageDataQuery.RecommendedProfiles? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _recommendedProfiles = RecommendedProfiles.obj().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return HomePageDataQuery.Data1(
        recommendedProfiles = _recommendedProfiles!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.Data1,
    ): Unit {
      writer.name("recommendedProfiles")
      RecommendedProfiles.obj().toJson(writer, customScalarAdapters, value.recommendedProfiles)
    }
  }

  public object RecommendedProfiles : Adapter<HomePageDataQuery.RecommendedProfiles> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("list")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.RecommendedProfiles {
      var _list: kotlin.collections.List<HomePageDataQuery.List1>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _list = List1.obj(true).list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HomePageDataQuery.RecommendedProfiles(
        list = _list!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.RecommendedProfiles,
    ): Unit {
      writer.name("list")
      List1.obj(true).list().toJson(writer, customScalarAdapters, value.list)
    }
  }

  public object List1 : Adapter<HomePageDataQuery.List1> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.List1 {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _connectionPersonalProfile: ConnectionPersonalProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _connectionPersonalProfile = com.cyberconnect.link3.fragment.ConnectionPersonalProfileImpl_ResponseAdapter.ConnectionPersonalProfile.fromJson(reader,
            customScalarAdapters)
      }

      return HomePageDataQuery.List1(
        __typename = __typename,
        connectionPersonalProfile = _connectionPersonalProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.List1,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.connectionPersonalProfile != null) {
        com.cyberconnect.link3.fragment.ConnectionPersonalProfileImpl_ResponseAdapter.ConnectionPersonalProfile.toJson(writer,
            customScalarAdapters, value.connectionPersonalProfile)
      }
    }
  }

  public object Profiles : Adapter<HomePageDataQuery.Profiles> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("data")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.Profiles {
      var _data: HomePageDataQuery.Data2? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _data = Data2.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HomePageDataQuery.Profiles(
        `data` = _data
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.Profiles,
    ): Unit {
      writer.name("data")
      Data2.obj().nullable().toJson(writer, customScalarAdapters, value.`data`)
    }
  }

  public object Data2 : Adapter<HomePageDataQuery.Data2> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("schoolmatesProfiles",
        "similarWorkExperiencesProfiles")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.Data2 {
      var _schoolmatesProfiles: kotlin.collections.List<HomePageDataQuery.SchoolmatesProfile>? = null
      var _similarWorkExperiencesProfiles: kotlin.collections.List<HomePageDataQuery.SimilarWorkExperiencesProfile>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _schoolmatesProfiles = SchoolmatesProfile.obj(true).list().fromJson(reader,
              customScalarAdapters)
          1 -> _similarWorkExperiencesProfiles = SimilarWorkExperiencesProfile.obj(true).list().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return HomePageDataQuery.Data2(
        schoolmatesProfiles = _schoolmatesProfiles!!,
        similarWorkExperiencesProfiles = _similarWorkExperiencesProfiles!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.Data2,
    ): Unit {
      writer.name("schoolmatesProfiles")
      SchoolmatesProfile.obj(true).list().toJson(writer, customScalarAdapters,
          value.schoolmatesProfiles)

      writer.name("similarWorkExperiencesProfiles")
      SimilarWorkExperiencesProfile.obj(true).list().toJson(writer, customScalarAdapters,
          value.similarWorkExperiencesProfiles)
    }
  }

  public object SchoolmatesProfile : Adapter<HomePageDataQuery.SchoolmatesProfile> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.SchoolmatesProfile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _perProfileWithOrg = com.cyberconnect.link3.fragment.PerProfileWithOrgImpl_ResponseAdapter.PerProfileWithOrg.fromJson(reader,
          customScalarAdapters)

      return HomePageDataQuery.SchoolmatesProfile(
        __typename = __typename!!,
        perProfileWithOrg = _perProfileWithOrg
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.SchoolmatesProfile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.PerProfileWithOrgImpl_ResponseAdapter.PerProfileWithOrg.toJson(writer,
          customScalarAdapters, value.perProfileWithOrg)
    }
  }

  public object SimilarWorkExperiencesProfile :
      Adapter<HomePageDataQuery.SimilarWorkExperiencesProfile> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.SimilarWorkExperiencesProfile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _perProfileWithOrg = com.cyberconnect.link3.fragment.PerProfileWithOrgImpl_ResponseAdapter.PerProfileWithOrg.fromJson(reader,
          customScalarAdapters)

      return HomePageDataQuery.SimilarWorkExperiencesProfile(
        __typename = __typename!!,
        perProfileWithOrg = _perProfileWithOrg
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.SimilarWorkExperiencesProfile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.PerProfileWithOrgImpl_ResponseAdapter.PerProfileWithOrg.toJson(writer,
          customScalarAdapters, value.perProfileWithOrg)
    }
  }

  public object ExploreEvent : Adapter<HomePageDataQuery.ExploreEvent> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.ExploreEvent {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _eventCardWithPoster = com.cyberconnect.link3.fragment.EventCardWithPosterImpl_ResponseAdapter.EventCardWithPoster.fromJson(reader,
          customScalarAdapters)

      return HomePageDataQuery.ExploreEvent(
        __typename = __typename!!,
        eventCardWithPoster = _eventCardWithPoster
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.ExploreEvent,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.EventCardWithPosterImpl_ResponseAdapter.EventCardWithPoster.toJson(writer,
          customScalarAdapters, value.eventCardWithPoster)
    }
  }

  public object ExplorePost : Adapter<HomePageDataQuery.ExplorePost> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HomePageDataQuery.ExplorePost {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _postCard = com.cyberconnect.link3.fragment.PostCardImpl_ResponseAdapter.PostCard.fromJson(reader,
          customScalarAdapters)

      return HomePageDataQuery.ExplorePost(
        __typename = __typename!!,
        postCard = _postCard
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: HomePageDataQuery.ExplorePost,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.PostCardImpl_ResponseAdapter.PostCard.toJson(writer,
          customScalarAdapters, value.postCard)
    }
  }
}
