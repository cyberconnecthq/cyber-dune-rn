//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.type.Block
import com.cyberconnect.link3.type.GraphQLID
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.ProfileType
import kotlin.collections.List

public object ProfileSelections {
  private val __blocks: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Block",
          possibleTypes = listOf("LinkBlock", "SuperLinkBlock", "TwitterBlock", "CredentialBlock",
              "NFTBlock", "W3STBlock", "NFTCollectionBlock", "SnapshotBlock", "EventBlock",
              "PostBlock", "SkillBlock", "WorkExperienceBlock", "EducationBlock", "ContactBlock",
              "RecommendationBlock")
        ).selections(BlockSelections.__root)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "handle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "type",
          type = ProfileType.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "OrgProfile",
          possibleTypes = listOf("OrgProfile")
        ).selections(OrgProfileSelections.__root)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "PerProfile",
          possibleTypes = listOf("PerProfile")
        ).selections(PersonalProfileSelections.__root)
        .build(),
        CompiledField.Builder(
          name = "blocks",
          type = Block.type.notNull().list().notNull()
        ).selections(__blocks)
        .build()
      )
}
