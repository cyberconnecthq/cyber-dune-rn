//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.ClaimBadgeMutation
import com.cyberconnect.link3.type.CollectW3STResponse_Status
import com.cyberconnect.link3.type.adapter.CollectW3STResponse_Status_ResponseAdapter
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object ClaimBadgeMutation_ResponseAdapter {
  public object Data : Adapter<ClaimBadgeMutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("collectW3ST")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ClaimBadgeMutation.Data {
      var _collectW3ST: ClaimBadgeMutation.CollectW3ST? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _collectW3ST = CollectW3ST.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ClaimBadgeMutation.Data(
        collectW3ST = _collectW3ST!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ClaimBadgeMutation.Data,
    ): Unit {
      writer.name("collectW3ST")
      CollectW3ST.obj().toJson(writer, customScalarAdapters, value.collectW3ST)
    }
  }

  public object CollectW3ST : Adapter<ClaimBadgeMutation.CollectW3ST> {
    public val RESPONSE_NAMES: List<String> = listOf("status", "gasLess", "collector", "profileId",
        "essenceId", "preData", "collectId")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ClaimBadgeMutation.CollectW3ST {
      var _status: CollectW3STResponse_Status? = null
      var _gasLess: Boolean? = null
      var _collector: String? = null
      var _profileId: Int? = null
      var _essenceId: Int? = null
      var _preData: String? = null
      var _collectId: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _status = CollectW3STResponse_Status_ResponseAdapter.fromJson(reader,
              customScalarAdapters)
          1 -> _gasLess = BooleanAdapter.fromJson(reader, customScalarAdapters)
          2 -> _collector = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _profileId = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          4 -> _essenceId = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          5 -> _preData = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          6 -> _collectId = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ClaimBadgeMutation.CollectW3ST(
        status = _status!!,
        gasLess = _gasLess!!,
        collector = _collector,
        profileId = _profileId,
        essenceId = _essenceId,
        preData = _preData,
        collectId = _collectId
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ClaimBadgeMutation.CollectW3ST,
    ): Unit {
      writer.name("status")
      CollectW3STResponse_Status_ResponseAdapter.toJson(writer, customScalarAdapters, value.status)

      writer.name("gasLess")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.gasLess)

      writer.name("collector")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.collector)

      writer.name("profileId")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.profileId)

      writer.name("essenceId")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.essenceId)

      writer.name("preData")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.preData)

      writer.name("collectId")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.collectId)
    }
  }
}
