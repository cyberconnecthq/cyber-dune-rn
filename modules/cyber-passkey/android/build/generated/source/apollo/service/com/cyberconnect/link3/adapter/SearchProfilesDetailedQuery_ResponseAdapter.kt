//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.cyberconnect.link3.SearchProfilesDetailedQuery
import com.cyberconnect.link3.fragment.SearchOrgProfileDetailed
import com.cyberconnect.link3.fragment.SearchPerProfileDetailed
import kotlin.Boolean
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object SearchProfilesDetailedQuery_ResponseAdapter {
  public object Data : Adapter<SearchProfilesDetailedQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("searchProfiles")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchProfilesDetailedQuery.Data {
      var _searchProfiles: SearchProfilesDetailedQuery.SearchProfiles? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _searchProfiles = SearchProfiles.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SearchProfilesDetailedQuery.Data(
        searchProfiles = _searchProfiles!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchProfilesDetailedQuery.Data,
    ): Unit {
      writer.name("searchProfiles")
      SearchProfiles.obj().toJson(writer, customScalarAdapters, value.searchProfiles)
    }
  }

  public object SearchProfiles : Adapter<SearchProfilesDetailedQuery.SearchProfiles> {
    public val RESPONSE_NAMES: List<String> = listOf("profiles", "orgProfiles", "pageInfo")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchProfilesDetailedQuery.SearchProfiles {
      var _profiles: List<SearchProfilesDetailedQuery.Profile>? = null
      var _orgProfiles: List<SearchProfilesDetailedQuery.OrgProfile>? = null
      var _pageInfo: SearchProfilesDetailedQuery.PageInfo? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _profiles = Profile.obj(true).list().fromJson(reader, customScalarAdapters)
          1 -> _orgProfiles = OrgProfile.obj(true).list().fromJson(reader, customScalarAdapters)
          2 -> _pageInfo = PageInfo.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SearchProfilesDetailedQuery.SearchProfiles(
        profiles = _profiles!!,
        orgProfiles = _orgProfiles!!,
        pageInfo = _pageInfo!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchProfilesDetailedQuery.SearchProfiles,
    ): Unit {
      writer.name("profiles")
      Profile.obj(true).list().toJson(writer, customScalarAdapters, value.profiles)

      writer.name("orgProfiles")
      OrgProfile.obj(true).list().toJson(writer, customScalarAdapters, value.orgProfiles)

      writer.name("pageInfo")
      PageInfo.obj().toJson(writer, customScalarAdapters, value.pageInfo)
    }
  }

  public object Profile : Adapter<SearchProfilesDetailedQuery.Profile> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchProfilesDetailedQuery.Profile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _searchPerProfileDetailed: SearchPerProfileDetailed? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _searchPerProfileDetailed = com.cyberconnect.link3.fragment.SearchPerProfileDetailedImpl_ResponseAdapter.SearchPerProfileDetailed.fromJson(reader,
            customScalarAdapters)
      }

      return SearchProfilesDetailedQuery.Profile(
        __typename = __typename,
        searchPerProfileDetailed = _searchPerProfileDetailed
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchProfilesDetailedQuery.Profile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.searchPerProfileDetailed != null) {
        com.cyberconnect.link3.fragment.SearchPerProfileDetailedImpl_ResponseAdapter.SearchPerProfileDetailed.toJson(writer,
            customScalarAdapters, value.searchPerProfileDetailed)
      }
    }
  }

  public object OrgProfile : Adapter<SearchProfilesDetailedQuery.OrgProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchProfilesDetailedQuery.OrgProfile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _searchOrgProfileDetailed: SearchOrgProfileDetailed? = null
      if (possibleTypes("OrgProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _searchOrgProfileDetailed = com.cyberconnect.link3.fragment.SearchOrgProfileDetailedImpl_ResponseAdapter.SearchOrgProfileDetailed.fromJson(reader,
            customScalarAdapters)
      }

      return SearchProfilesDetailedQuery.OrgProfile(
        __typename = __typename,
        searchOrgProfileDetailed = _searchOrgProfileDetailed
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchProfilesDetailedQuery.OrgProfile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.searchOrgProfileDetailed != null) {
        com.cyberconnect.link3.fragment.SearchOrgProfileDetailedImpl_ResponseAdapter.SearchOrgProfileDetailed.toJson(writer,
            customScalarAdapters, value.searchOrgProfileDetailed)
      }
    }
  }

  public object PageInfo : Adapter<SearchProfilesDetailedQuery.PageInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("startCursor", "endCursor", "hasNextPage",
        "hasPreviousPage")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchProfilesDetailedQuery.PageInfo {
      var _startCursor: String? = null
      var _endCursor: String? = null
      var _hasNextPage: Boolean? = null
      var _hasPreviousPage: Boolean? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _startCursor = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _endCursor = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _hasNextPage = BooleanAdapter.fromJson(reader, customScalarAdapters)
          3 -> _hasPreviousPage = BooleanAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SearchProfilesDetailedQuery.PageInfo(
        startCursor = _startCursor!!,
        endCursor = _endCursor!!,
        hasNextPage = _hasNextPage!!,
        hasPreviousPage = _hasPreviousPage!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchProfilesDetailedQuery.PageInfo,
    ): Unit {
      writer.name("startCursor")
      StringAdapter.toJson(writer, customScalarAdapters, value.startCursor)

      writer.name("endCursor")
      StringAdapter.toJson(writer, customScalarAdapters, value.endCursor)

      writer.name("hasNextPage")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.hasNextPage)

      writer.name("hasPreviousPage")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.hasPreviousPage)
    }
  }
}
