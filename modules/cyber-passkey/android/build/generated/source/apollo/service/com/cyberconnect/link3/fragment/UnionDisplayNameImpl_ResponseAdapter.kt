//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object UnionDisplayNameImpl_ResponseAdapter {
  public object UnionDisplayName : Adapter<com.cyberconnect.link3.fragment.UnionDisplayName> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.UnionDisplayName {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onOrgProfile: com.cyberconnect.link3.fragment.UnionDisplayName.OnOrgProfile? = null
      if (possibleTypes("OrgProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onOrgProfile = com.cyberconnect.link3.fragment.UnionDisplayNameImpl_ResponseAdapter.OnOrgProfile.fromJson(reader,
            customScalarAdapters)
      }

      var _onPerProfile: com.cyberconnect.link3.fragment.UnionDisplayName.OnPerProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPerProfile = com.cyberconnect.link3.fragment.UnionDisplayNameImpl_ResponseAdapter.OnPerProfile.fromJson(reader,
            customScalarAdapters)
      }

      return com.cyberconnect.link3.fragment.UnionDisplayName(
        __typename = __typename,
        onOrgProfile = _onOrgProfile,
        onPerProfile = _onPerProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.UnionDisplayName,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.onOrgProfile != null) {
        com.cyberconnect.link3.fragment.UnionDisplayNameImpl_ResponseAdapter.OnOrgProfile.toJson(writer,
            customScalarAdapters, value.onOrgProfile)
      }

      if (value.onPerProfile != null) {
        com.cyberconnect.link3.fragment.UnionDisplayNameImpl_ResponseAdapter.OnPerProfile.toJson(writer,
            customScalarAdapters, value.onPerProfile)
      }
    }
  }

  public object OnOrgProfile :
      Adapter<com.cyberconnect.link3.fragment.UnionDisplayName.OnOrgProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("displayName")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.UnionDisplayName.OnOrgProfile {
      var _displayName: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.UnionDisplayName.OnOrgProfile(
        displayName = _displayName!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.UnionDisplayName.OnOrgProfile,
    ): Unit {
      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)
    }
  }

  public object OnPerProfile :
      Adapter<com.cyberconnect.link3.fragment.UnionDisplayName.OnPerProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("personalDisplayName")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.UnionDisplayName.OnPerProfile {
      var _personalDisplayName: com.cyberconnect.link3.fragment.UnionDisplayName.PersonalDisplayName? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _personalDisplayName = PersonalDisplayName.obj().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.UnionDisplayName.OnPerProfile(
        personalDisplayName = _personalDisplayName!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.UnionDisplayName.OnPerProfile,
    ): Unit {
      writer.name("personalDisplayName")
      PersonalDisplayName.obj().toJson(writer, customScalarAdapters, value.personalDisplayName)
    }
  }

  public object PersonalDisplayName :
      Adapter<com.cyberconnect.link3.fragment.UnionDisplayName.PersonalDisplayName> {
    public val RESPONSE_NAMES: List<String> = listOf("displayName")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.UnionDisplayName.PersonalDisplayName {
      var _displayName: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.UnionDisplayName.PersonalDisplayName(
        displayName = _displayName!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.UnionDisplayName.PersonalDisplayName,
    ): Unit {
      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)
    }
  }
}
