//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.cyberconnect.link3.type.ConnectStatus
import com.cyberconnect.link3.type.HeadlineType
import com.cyberconnect.link3.type.adapter.ConnectStatus_ResponseAdapter
import com.cyberconnect.link3.type.adapter.HeadlineType_ResponseAdapter
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit

public object TargetUserProfileImpl_ResponseAdapter {
  public object TargetUserProfile : Adapter<com.cyberconnect.link3.fragment.TargetUserProfile> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("id", "connectStatus",
        "reputation", "mutualConnectionCount", "mutualConnections", "isVerified", "headline")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserProfile {
      var _id: String? = null
      var _connectStatus: ConnectStatus? = null
      var _reputation: com.cyberconnect.link3.fragment.TargetUserProfile.Reputation? = null
      var _mutualConnectionCount: Int? = null
      var _mutualConnections: com.cyberconnect.link3.fragment.TargetUserProfile.MutualConnections? = null
      var _isVerified: Boolean? = null
      var _headline: com.cyberconnect.link3.fragment.TargetUserProfile.Headline? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _connectStatus = ConnectStatus_ResponseAdapter.fromJson(reader, customScalarAdapters)
          2 -> _reputation = Reputation.obj().fromJson(reader, customScalarAdapters)
          3 -> _mutualConnectionCount = IntAdapter.fromJson(reader, customScalarAdapters)
          4 -> _mutualConnections = MutualConnections.obj().fromJson(reader, customScalarAdapters)
          5 -> _isVerified = BooleanAdapter.fromJson(reader, customScalarAdapters)
          6 -> _headline = Headline.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.TargetUserProfile(
        id = _id!!,
        connectStatus = _connectStatus!!,
        reputation = _reputation!!,
        mutualConnectionCount = _mutualConnectionCount!!,
        mutualConnections = _mutualConnections!!,
        isVerified = _isVerified!!,
        headline = _headline!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserProfile,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("connectStatus")
      ConnectStatus_ResponseAdapter.toJson(writer, customScalarAdapters, value.connectStatus)

      writer.name("reputation")
      Reputation.obj().toJson(writer, customScalarAdapters, value.reputation)

      writer.name("mutualConnectionCount")
      IntAdapter.toJson(writer, customScalarAdapters, value.mutualConnectionCount)

      writer.name("mutualConnections")
      MutualConnections.obj().toJson(writer, customScalarAdapters, value.mutualConnections)

      writer.name("isVerified")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.isVerified)

      writer.name("headline")
      Headline.obj().toJson(writer, customScalarAdapters, value.headline)
    }
  }

  public object Reputation : Adapter<com.cyberconnect.link3.fragment.TargetUserProfile.Reputation> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("total")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserProfile.Reputation {
      var _total: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _total = IntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.TargetUserProfile.Reputation(
        total = _total!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserProfile.Reputation,
    ): Unit {
      writer.name("total")
      IntAdapter.toJson(writer, customScalarAdapters, value.total)
    }
  }

  public object MutualConnections :
      Adapter<com.cyberconnect.link3.fragment.TargetUserProfile.MutualConnections> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("list")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserProfile.MutualConnections {
      var _list: kotlin.collections.List<com.cyberconnect.link3.fragment.TargetUserProfile.List>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _list = List.obj(true).list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.TargetUserProfile.MutualConnections(
        list = _list!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserProfile.MutualConnections,
    ): Unit {
      writer.name("list")
      List.obj(true).list().toJson(writer, customScalarAdapters, value.list)
    }
  }

  public object List : Adapter<com.cyberconnect.link3.fragment.TargetUserProfile.List> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserProfile.List {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onPerProfile: com.cyberconnect.link3.fragment.TargetUserProfile.OnPerProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPerProfile = com.cyberconnect.link3.fragment.TargetUserProfileImpl_ResponseAdapter.OnPerProfile.fromJson(reader,
            customScalarAdapters)
      }

      return com.cyberconnect.link3.fragment.TargetUserProfile.List(
        __typename = __typename,
        onPerProfile = _onPerProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserProfile.List,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.onPerProfile != null) {
        com.cyberconnect.link3.fragment.TargetUserProfileImpl_ResponseAdapter.OnPerProfile.toJson(writer,
            customScalarAdapters, value.onPerProfile)
      }
    }
  }

  public object OnPerProfile :
      Adapter<com.cyberconnect.link3.fragment.TargetUserProfile.OnPerProfile> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("__typename",
        "profilePicture")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserProfile.OnPerProfile {
      var __typename: String? = null
      var _profilePicture: com.cyberconnect.link3.fragment.TargetUserProfile.ProfilePicture? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _profilePicture = ProfilePicture.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.TargetUserProfile.OnPerProfile(
        __typename = __typename!!,
        profilePicture = _profilePicture!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserProfile.OnPerProfile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("profilePicture")
      ProfilePicture.obj().toJson(writer, customScalarAdapters, value.profilePicture)
    }
  }

  public object ProfilePicture :
      Adapter<com.cyberconnect.link3.fragment.TargetUserProfile.ProfilePicture> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("picture")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserProfile.ProfilePicture {
      var _picture: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _picture = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.TargetUserProfile.ProfilePicture(
        picture = _picture
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserProfile.ProfilePicture,
    ): Unit {
      writer.name("picture")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.picture)
    }
  }

  public object Headline : Adapter<com.cyberconnect.link3.fragment.TargetUserProfile.Headline> {
    public val RESPONSE_NAMES: kotlin.collections.List<String> = listOf("twitterId",
        "twitterHandle", "displayName", "avatar", "title", "description", "profileId",
        "headlineType")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.TargetUserProfile.Headline {
      var _twitterId: String? = null
      var _twitterHandle: String? = null
      var _displayName: String? = null
      var _avatar: Any? = null
      var _title: String? = null
      var _description: String? = null
      var _profileId: String? = null
      var _headlineType: HeadlineType? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _twitterId = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _twitterHandle = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _avatar = AnyAdapter.fromJson(reader, customScalarAdapters)
          4 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          5 -> _description = StringAdapter.fromJson(reader, customScalarAdapters)
          6 -> _profileId = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          7 -> _headlineType = HeadlineType_ResponseAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.TargetUserProfile.Headline(
        twitterId = _twitterId!!,
        twitterHandle = _twitterHandle!!,
        displayName = _displayName!!,
        avatar = _avatar!!,
        title = _title!!,
        description = _description!!,
        profileId = _profileId,
        headlineType = _headlineType!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.TargetUserProfile.Headline,
    ): Unit {
      writer.name("twitterId")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterId)

      writer.name("twitterHandle")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterHandle)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("avatar")
      AnyAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("description")
      StringAdapter.toJson(writer, customScalarAdapters, value.description)

      writer.name("profileId")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.profileId)

      writer.name("headlineType")
      HeadlineType_ResponseAdapter.toJson(writer, customScalarAdapters, value.headlineType)
    }
  }
}
