//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.cyberconnect.link3.type.ConnectStatus
import com.cyberconnect.link3.type.adapter.ConnectStatus_ResponseAdapter
import kotlin.Boolean
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object MyConnectionItemImpl_ResponseAdapter {
  public object MyConnectionItem : Adapter<com.cyberconnect.link3.fragment.MyConnectionItem> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id", "handle")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MyConnectionItem {
      var __typename: String? = null
      var _id: String? = null
      var _handle: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _handle = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onPerProfile: com.cyberconnect.link3.fragment.MyConnectionItem.OnPerProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPerProfile = com.cyberconnect.link3.fragment.MyConnectionItemImpl_ResponseAdapter.OnPerProfile.fromJson(reader,
            customScalarAdapters)
      }

      return com.cyberconnect.link3.fragment.MyConnectionItem(
        __typename = __typename,
        id = _id!!,
        handle = _handle!!,
        onPerProfile = _onPerProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MyConnectionItem,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("handle")
      StringAdapter.toJson(writer, customScalarAdapters, value.handle)

      if (value.onPerProfile != null) {
        com.cyberconnect.link3.fragment.MyConnectionItemImpl_ResponseAdapter.OnPerProfile.toJson(writer,
            customScalarAdapters, value.onPerProfile)
      }
    }
  }

  public object OnPerProfile :
      Adapter<com.cyberconnect.link3.fragment.MyConnectionItem.OnPerProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("owner", "isVerified", "connectStatus",
        "headline", "personalDisplayName", "personalProfilePicture")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MyConnectionItem.OnPerProfile {
      var _owner: com.cyberconnect.link3.fragment.MyConnectionItem.Owner? = null
      var _isVerified: Boolean? = null
      var _connectStatus: ConnectStatus? = null
      var _headline: com.cyberconnect.link3.fragment.MyConnectionItem.Headline? = null
      var _personalDisplayName: com.cyberconnect.link3.fragment.MyConnectionItem.PersonalDisplayName? = null
      var _personalProfilePicture: com.cyberconnect.link3.fragment.MyConnectionItem.PersonalProfilePicture? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _owner = Owner.obj().fromJson(reader, customScalarAdapters)
          1 -> _isVerified = BooleanAdapter.fromJson(reader, customScalarAdapters)
          2 -> _connectStatus = ConnectStatus_ResponseAdapter.fromJson(reader, customScalarAdapters)
          3 -> _headline = Headline.obj().fromJson(reader, customScalarAdapters)
          4 -> _personalDisplayName = PersonalDisplayName.obj().fromJson(reader,
              customScalarAdapters)
          5 -> _personalProfilePicture = PersonalProfilePicture.obj().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MyConnectionItem.OnPerProfile(
        owner = _owner!!,
        isVerified = _isVerified!!,
        connectStatus = _connectStatus!!,
        headline = _headline!!,
        personalDisplayName = _personalDisplayName!!,
        personalProfilePicture = _personalProfilePicture!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MyConnectionItem.OnPerProfile,
    ): Unit {
      writer.name("owner")
      Owner.obj().toJson(writer, customScalarAdapters, value.owner)

      writer.name("isVerified")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.isVerified)

      writer.name("connectStatus")
      ConnectStatus_ResponseAdapter.toJson(writer, customScalarAdapters, value.connectStatus)

      writer.name("headline")
      Headline.obj().toJson(writer, customScalarAdapters, value.headline)

      writer.name("personalDisplayName")
      PersonalDisplayName.obj().toJson(writer, customScalarAdapters, value.personalDisplayName)

      writer.name("personalProfilePicture")
      PersonalProfilePicture.obj().toJson(writer, customScalarAdapters,
          value.personalProfilePicture)
    }
  }

  public object Owner : Adapter<com.cyberconnect.link3.fragment.MyConnectionItem.Owner> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "lightInfo")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MyConnectionItem.Owner {
      var _id: String? = null
      var _lightInfo: com.cyberconnect.link3.fragment.MyConnectionItem.LightInfo? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _lightInfo = LightInfo.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MyConnectionItem.Owner(
        id = _id!!,
        lightInfo = _lightInfo!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MyConnectionItem.Owner,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("lightInfo")
      LightInfo.obj().toJson(writer, customScalarAdapters, value.lightInfo)
    }
  }

  public object LightInfo : Adapter<com.cyberconnect.link3.fragment.MyConnectionItem.LightInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("attestation", "remark")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MyConnectionItem.LightInfo {
      var _attestation: com.cyberconnect.link3.fragment.MyConnectionItem.Attestation? = null
      var _remark: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _attestation = Attestation.obj().nullable().fromJson(reader, customScalarAdapters)
          1 -> _remark = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MyConnectionItem.LightInfo(
        attestation = _attestation,
        remark = _remark!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MyConnectionItem.LightInfo,
    ): Unit {
      writer.name("attestation")
      Attestation.obj().nullable().toJson(writer, customScalarAdapters, value.attestation)

      writer.name("remark")
      StringAdapter.toJson(writer, customScalarAdapters, value.remark)
    }
  }

  public object Attestation : Adapter<com.cyberconnect.link3.fragment.MyConnectionItem.Attestation>
      {
    public val RESPONSE_NAMES: List<String> = listOf("uid")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MyConnectionItem.Attestation {
      var _uid: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _uid = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MyConnectionItem.Attestation(
        uid = _uid!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MyConnectionItem.Attestation,
    ): Unit {
      writer.name("uid")
      StringAdapter.toJson(writer, customScalarAdapters, value.uid)
    }
  }

  public object Headline : Adapter<com.cyberconnect.link3.fragment.MyConnectionItem.Headline> {
    public val RESPONSE_NAMES: List<String> = listOf("title", "twitterHandle", "displayName")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MyConnectionItem.Headline {
      var _title: String? = null
      var _twitterHandle: String? = null
      var _displayName: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _twitterHandle = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MyConnectionItem.Headline(
        title = _title!!,
        twitterHandle = _twitterHandle!!,
        displayName = _displayName!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MyConnectionItem.Headline,
    ): Unit {
      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("twitterHandle")
      StringAdapter.toJson(writer, customScalarAdapters, value.twitterHandle)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)
    }
  }

  public object PersonalDisplayName :
      Adapter<com.cyberconnect.link3.fragment.MyConnectionItem.PersonalDisplayName> {
    public val RESPONSE_NAMES: List<String> = listOf("displayName")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MyConnectionItem.PersonalDisplayName {
      var _displayName: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MyConnectionItem.PersonalDisplayName(
        displayName = _displayName!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MyConnectionItem.PersonalDisplayName,
    ): Unit {
      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)
    }
  }

  public object PersonalProfilePicture :
      Adapter<com.cyberconnect.link3.fragment.MyConnectionItem.PersonalProfilePicture> {
    public val RESPONSE_NAMES: List<String> = listOf("picture")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MyConnectionItem.PersonalProfilePicture {
      var _picture: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _picture = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MyConnectionItem.PersonalProfilePicture(
        picture = _picture
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MyConnectionItem.PersonalProfilePicture,
    ): Unit {
      writer.name("picture")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.picture)
    }
  }
}
