//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Any
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object PostCardImpl_ResponseAdapter {
  public object PostCard : Adapter<com.cyberconnect.link3.fragment.PostCard> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "title", "cover", "description",
        "publishedAt", "readTime", "essence", "profile")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.PostCard {
      var _id: String? = null
      var _title: String? = null
      var _cover: Any? = null
      var _description: String? = null
      var _publishedAt: Any? = null
      var _readTime: Int? = null
      var _essence: com.cyberconnect.link3.fragment.PostCard.Essence? = null
      var _profile: com.cyberconnect.link3.fragment.PostCard.Profile? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _cover = AnyAdapter.fromJson(reader, customScalarAdapters)
          3 -> _description = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _publishedAt = AnyAdapter.fromJson(reader, customScalarAdapters)
          5 -> _readTime = IntAdapter.fromJson(reader, customScalarAdapters)
          6 -> _essence = Essence.obj().nullable().fromJson(reader, customScalarAdapters)
          7 -> _profile = Profile.obj(true).fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.PostCard(
        id = _id!!,
        title = _title!!,
        cover = _cover!!,
        description = _description!!,
        publishedAt = _publishedAt!!,
        readTime = _readTime!!,
        essence = _essence,
        profile = _profile!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.PostCard,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("cover")
      AnyAdapter.toJson(writer, customScalarAdapters, value.cover)

      writer.name("description")
      StringAdapter.toJson(writer, customScalarAdapters, value.description)

      writer.name("publishedAt")
      AnyAdapter.toJson(writer, customScalarAdapters, value.publishedAt)

      writer.name("readTime")
      IntAdapter.toJson(writer, customScalarAdapters, value.readTime)

      writer.name("essence")
      Essence.obj().nullable().toJson(writer, customScalarAdapters, value.essence)

      writer.name("profile")
      Profile.obj(true).toJson(writer, customScalarAdapters, value.profile)
    }
  }

  public object Essence : Adapter<com.cyberconnect.link3.fragment.PostCard.Essence> {
    public val RESPONSE_NAMES: List<String> = listOf("totalCollected", "totalSupply")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.PostCard.Essence {
      var _totalCollected: Int? = null
      var _totalSupply: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _totalCollected = IntAdapter.fromJson(reader, customScalarAdapters)
          1 -> _totalSupply = IntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.PostCard.Essence(
        totalCollected = _totalCollected!!,
        totalSupply = _totalSupply!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.PostCard.Essence,
    ): Unit {
      writer.name("totalCollected")
      IntAdapter.toJson(writer, customScalarAdapters, value.totalCollected)

      writer.name("totalSupply")
      IntAdapter.toJson(writer, customScalarAdapters, value.totalSupply)
    }
  }

  public object Profile : Adapter<com.cyberconnect.link3.fragment.PostCard.Profile> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.PostCard.Profile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _profileInPostCard = com.cyberconnect.link3.fragment.ProfileInPostCardImpl_ResponseAdapter.ProfileInPostCard.fromJson(reader,
          customScalarAdapters)

      return com.cyberconnect.link3.fragment.PostCard.Profile(
        __typename = __typename!!,
        profileInPostCard = _profileInPostCard
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.PostCard.Profile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.ProfileInPostCardImpl_ResponseAdapter.ProfileInPostCard.toJson(writer,
          customScalarAdapters, value.profileInPostCard)
    }
  }
}
