//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.adapter.SettingsQuery_ResponseAdapter
import com.cyberconnect.link3.selections.SettingsQuerySelections
import com.cyberconnect.link3.type.ChatPriceFeedback
import com.cyberconnect.link3.type.MeResponse_Status
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit

public class SettingsQuery() : Query<SettingsQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = SettingsQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cyberconnect.link3.type.Query.type
  )
  .selections(selections = SettingsQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(SettingsQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val me: Me,
  ) : Query.Data

  public data class Me(
    public val status: MeResponse_Status,
    public val message: String,
    public val `data`: Data1?,
  )

  public data class Data1(
    public val id: String,
    public val privateInfo: PrivateInfo?,
    public val priceFeedback: PriceFeedback,
    public val profile: Profile?,
  )

  public data class PrivateInfo(
    /**
     * User access token, expired in 7 days.
     */
    public val accessToken: String,
    public val twitterId: String,
    public val discordId: String,
    public val email: String,
    public val linkedinId: String,
    public val linkedinInfo: LinkedinInfo,
    public val githubId: String,
    public val telegram: Telegram?,
  )

  public data class LinkedinInfo(
    public val needRefresh: Boolean,
  )

  public data class Telegram(
    public val telegramId: String,
    public val username: String,
    public val subscribed: Boolean,
  )

  public data class PriceFeedback(
    public val feedback: ChatPriceFeedback?,
  )

  public data class Profile(
    public val __typename: String,
    /**
     * Synthetic field for inline fragment on PerProfile
     */
    public val onPerProfile: OnPerProfile?,
  )

  public data class OnPerProfile(
    public val isVerified: Boolean,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "07953daff50a7bb180d77b44f65281a08178237029cba0347d12ca40a3a39d6c"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query settings {
     *   me {
     *     status
     *     message
     *     data {
     *       id
     *       privateInfo {
     *         accessToken
     *         twitterId
     *         discordId
     *         email
     *         linkedinId
     *         linkedinInfo {
     *           needRefresh
     *         }
     *         githubId
     *         telegram {
     *           telegramId
     *           username
     *           subscribed
     *         }
     *       }
     *       priceFeedback {
     *         feedback
     *       }
     *       profile {
     *         __typename
     *         ... on PerProfile {
     *           isVerified
     *         }
     *       }
     *     }
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query settings { me { status message data { id privateInfo { accessToken twitterId discordId email linkedinId linkedinInfo { needRefresh } githubId telegram { telegramId username subscribed } } priceFeedback { feedback } profile { __typename ... on PerProfile { isVerified } } } } }"

    public const val OPERATION_NAME: String = "settings"
  }
}
