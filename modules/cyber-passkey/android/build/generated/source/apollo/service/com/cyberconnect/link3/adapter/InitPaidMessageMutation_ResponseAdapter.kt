//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.InitPaidMessageMutation
import com.cyberconnect.link3.type.InitPaidMessageResponse_Status
import com.cyberconnect.link3.type.adapter.InitPaidMessageResponse_Status_ResponseAdapter
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object InitPaidMessageMutation_ResponseAdapter {
  public object Data : Adapter<InitPaidMessageMutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("initPaidMessage")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        InitPaidMessageMutation.Data {
      var _initPaidMessage: InitPaidMessageMutation.InitPaidMessage? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _initPaidMessage = InitPaidMessage.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return InitPaidMessageMutation.Data(
        initPaidMessage = _initPaidMessage!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: InitPaidMessageMutation.Data,
    ): Unit {
      writer.name("initPaidMessage")
      InitPaidMessage.obj().toJson(writer, customScalarAdapters, value.initPaidMessage)
    }
  }

  public object InitPaidMessage : Adapter<InitPaidMessageMutation.InitPaidMessage> {
    public val RESPONSE_NAMES: List<String> = listOf("status", "message", "sponsorSig")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        InitPaidMessageMutation.InitPaidMessage {
      var _status: InitPaidMessageResponse_Status? = null
      var _message: InitPaidMessageMutation.Message? = null
      var _sponsorSig: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _status = InitPaidMessageResponse_Status_ResponseAdapter.fromJson(reader,
              customScalarAdapters)
          1 -> _message = Message.obj().nullable().fromJson(reader, customScalarAdapters)
          2 -> _sponsorSig = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return InitPaidMessageMutation.InitPaidMessage(
        status = _status!!,
        message = _message,
        sponsorSig = _sponsorSig!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: InitPaidMessageMutation.InitPaidMessage,
    ): Unit {
      writer.name("status")
      InitPaidMessageResponse_Status_ResponseAdapter.toJson(writer, customScalarAdapters,
          value.status)

      writer.name("message")
      Message.obj().nullable().toJson(writer, customScalarAdapters, value.message)

      writer.name("sponsorSig")
      StringAdapter.toJson(writer, customScalarAdapters, value.sponsorSig)
    }
  }

  public object Message : Adapter<InitPaidMessageMutation.Message> {
    public val RESPONSE_NAMES: List<String> = listOf("id")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        InitPaidMessageMutation.Message {
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return InitPaidMessageMutation.Message(
        id = _id!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: InitPaidMessageMutation.Message,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)
    }
  }
}
