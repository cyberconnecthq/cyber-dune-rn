//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.type.EventStatus
import com.cyberconnect.link3.type.GraphQLID
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.Organization
import com.cyberconnect.link3.type.Timestamp
import com.cyberconnect.link3.type.Url
import kotlin.collections.List

public object MyEventCardSelections {
  private val __organizer: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Organization",
          possibleTypes = listOf("Organization")
        ).selections(OrganizerSelections.__root)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "info",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "title",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "posterUrl",
          type = Url.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "startTimestamp",
          type = Timestamp.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "endTimestamp",
          type = Timestamp.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "status",
          type = EventStatus.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "organizer",
          type = Organization.type.notNull()
        ).selections(__organizer)
        .build()
      )
}
