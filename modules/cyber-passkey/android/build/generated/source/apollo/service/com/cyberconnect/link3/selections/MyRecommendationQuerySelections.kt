//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.type.GraphQLBoolean
import com.cyberconnect.link3.type.GraphQLID
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.LightInfo
import com.cyberconnect.link3.type.MeResponse
import com.cyberconnect.link3.type.MyRecommendationsResponse
import com.cyberconnect.link3.type.Profile
import com.cyberconnect.link3.type.Recommendation
import com.cyberconnect.link3.type.Twitter
import com.cyberconnect.link3.type.Url
import com.cyberconnect.link3.type.User
import kotlin.collections.List

public object MyRecommendationQuerySelections {
  private val __lightInfo: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "handle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "avatar",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "formattedAddress",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __headline: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "twitterId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterHandle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "avatar",
          type = Url.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "title",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "profileId",
          type = GraphQLID.type
        ).build()
      )

  private val __onPerProfile: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "headline",
          type = Twitter.type.notNull()
        ).selections(__headline)
        .build(),
        CompiledField.Builder(
          name = "isVerified",
          type = GraphQLBoolean.type.notNull()
        ).build()
      )

  private val __profile: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "PerProfile",
          possibleTypes = listOf("PerProfile")
        ).selections(__onPerProfile)
        .build()
      )

  private val __user: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "lightInfo",
          type = LightInfo.type.notNull()
        ).selections(__lightInfo)
        .build(),
        CompiledField.Builder(
          name = "profile",
          type = Profile.type
        ).selections(__profile)
        .build()
      )

  private val __received: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "hidden",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "content",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "user",
          type = User.type.notNull()
        ).selections(__user)
        .build()
      )

  private val __lightInfo1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "handle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "avatar",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "formattedAddress",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __headline1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "twitterId",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "twitterHandle",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "displayName",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "avatar",
          type = Url.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "title",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "profileId",
          type = GraphQLID.type
        ).build()
      )

  private val __onPerProfile1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "headline",
          type = Twitter.type.notNull()
        ).selections(__headline1)
        .build(),
        CompiledField.Builder(
          name = "isVerified",
          type = GraphQLBoolean.type.notNull()
        ).build()
      )

  private val __profile1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "PerProfile",
          possibleTypes = listOf("PerProfile")
        ).selections(__onPerProfile1)
        .build()
      )

  private val __user1: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "lightInfo",
          type = LightInfo.type.notNull()
        ).selections(__lightInfo1)
        .build(),
        CompiledField.Builder(
          name = "profile",
          type = Profile.type
        ).selections(__profile1)
        .build()
      )

  private val __given: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "hidden",
          type = GraphQLBoolean.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "content",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "user",
          type = User.type.notNull()
        ).selections(__user1)
        .build()
      )

  private val __myRecommendations: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "received",
          type = Recommendation.type.notNull().list().notNull()
        ).selections(__received)
        .build(),
        CompiledField.Builder(
          name = "given",
          type = Recommendation.type.notNull().list().notNull()
        ).selections(__given)
        .build()
      )

  private val __data: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "myRecommendations",
          type = MyRecommendationsResponse.type.notNull()
        ).selections(__myRecommendations)
        .build()
      )

  private val __me: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "data",
          type = User.type
        ).selections(__data)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "me",
          type = MeResponse.type.notNull()
        ).selections(__me)
        .build()
      )
}
