//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.notNull
import com.cyberconnect.link3.fragment.selections.ProfileSelections
import com.cyberconnect.link3.type.GraphQLString
import com.cyberconnect.link3.type.Profile
import com.cyberconnect.link3.type.ProfileResponse
import com.cyberconnect.link3.type.ProfileResponse_Status
import kotlin.collections.List

public object GetProfileQuerySelections {
  private val __data: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Profile",
          possibleTypes = listOf("OrgProfile", "PerProfile")
        ).selections(ProfileSelections.__root)
        .build()
      )

  private val __profile: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "status",
          type = ProfileResponse_Status.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "message",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "data",
          type = Profile.type
        ).selections(__data)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "profile",
          type = ProfileResponse.type.notNull()
        ).arguments(listOf(
          CompiledArgument.Builder("handle", CompiledVariable("handle")).build(),
          CompiledArgument.Builder("id", CompiledVariable("id")).build()
        ))
        .selections(__profile)
        .build()
      )
}
