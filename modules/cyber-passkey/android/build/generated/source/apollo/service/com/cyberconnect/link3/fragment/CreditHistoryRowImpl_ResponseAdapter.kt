//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.type.CreditOperation
import com.cyberconnect.link3.type.CreditSource
import com.cyberconnect.link3.type.CreditStatus
import com.cyberconnect.link3.type.adapter.CreditOperation_ResponseAdapter
import com.cyberconnect.link3.type.adapter.CreditSource_ResponseAdapter
import com.cyberconnect.link3.type.adapter.CreditStatus_ResponseAdapter
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object CreditHistoryRowImpl_ResponseAdapter {
  public object CreditHistoryRow : Adapter<com.cyberconnect.link3.fragment.CreditHistoryRow> {
    public val RESPONSE_NAMES: List<String> = listOf("chatUser", "confirmed", "operation", "status",
        "source", "value", "time")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.CreditHistoryRow {
      var _chatUser: com.cyberconnect.link3.fragment.CreditHistoryRow.ChatUser? = null
      var _confirmed: Boolean? = null
      var _operation: CreditOperation? = null
      var _status: CreditStatus? = null
      var _source: CreditSource? = null
      var _value: com.cyberconnect.link3.fragment.CreditHistoryRow.Value? = null
      var _time: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _chatUser = ChatUser.obj().nullable().fromJson(reader, customScalarAdapters)
          1 -> _confirmed = BooleanAdapter.fromJson(reader, customScalarAdapters)
          2 -> _operation = CreditOperation_ResponseAdapter.fromJson(reader, customScalarAdapters)
          3 -> _status = CreditStatus_ResponseAdapter.fromJson(reader, customScalarAdapters)
          4 -> _source = CreditSource_ResponseAdapter.fromJson(reader, customScalarAdapters)
          5 -> _value = Value.obj(true).fromJson(reader, customScalarAdapters)
          6 -> _time = IntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.CreditHistoryRow(
        chatUser = _chatUser,
        confirmed = _confirmed!!,
        operation = _operation!!,
        status = _status!!,
        source = _source!!,
        `value` = _value!!,
        time = _time!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.CreditHistoryRow,
    ): Unit {
      writer.name("chatUser")
      ChatUser.obj().nullable().toJson(writer, customScalarAdapters, value.chatUser)

      writer.name("confirmed")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.confirmed)

      writer.name("operation")
      CreditOperation_ResponseAdapter.toJson(writer, customScalarAdapters, value.operation)

      writer.name("status")
      CreditStatus_ResponseAdapter.toJson(writer, customScalarAdapters, value.status)

      writer.name("source")
      CreditSource_ResponseAdapter.toJson(writer, customScalarAdapters, value.source)

      writer.name("value")
      Value.obj(true).toJson(writer, customScalarAdapters, value.`value`)

      writer.name("time")
      IntAdapter.toJson(writer, customScalarAdapters, value.time)
    }
  }

  public object ChatUser : Adapter<com.cyberconnect.link3.fragment.CreditHistoryRow.ChatUser> {
    public val RESPONSE_NAMES: List<String> = listOf("lightInfo")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.CreditHistoryRow.ChatUser {
      var _lightInfo: com.cyberconnect.link3.fragment.CreditHistoryRow.LightInfo? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _lightInfo = LightInfo.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.CreditHistoryRow.ChatUser(
        lightInfo = _lightInfo!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.CreditHistoryRow.ChatUser,
    ): Unit {
      writer.name("lightInfo")
      LightInfo.obj().toJson(writer, customScalarAdapters, value.lightInfo)
    }
  }

  public object LightInfo : Adapter<com.cyberconnect.link3.fragment.CreditHistoryRow.LightInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("avatar", "displayName", "profileId")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.CreditHistoryRow.LightInfo {
      var _avatar: String? = null
      var _displayName: String? = null
      var _profileId: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _avatar = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _profileId = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.CreditHistoryRow.LightInfo(
        avatar = _avatar!!,
        displayName = _displayName!!,
        profileId = _profileId!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.CreditHistoryRow.LightInfo,
    ): Unit {
      writer.name("avatar")
      StringAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("profileId")
      StringAdapter.toJson(writer, customScalarAdapters, value.profileId)
    }
  }

  public object Value : Adapter<com.cyberconnect.link3.fragment.CreditHistoryRow.Value> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.CreditHistoryRow.Value {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _price = com.cyberconnect.link3.fragment.PriceImpl_ResponseAdapter.Price.fromJson(reader,
          customScalarAdapters)

      return com.cyberconnect.link3.fragment.CreditHistoryRow.Value(
        __typename = __typename!!,
        price = _price
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.CreditHistoryRow.Value,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.PriceImpl_ResponseAdapter.Price.toJson(writer,
          customScalarAdapters, value.price)
    }
  }
}
