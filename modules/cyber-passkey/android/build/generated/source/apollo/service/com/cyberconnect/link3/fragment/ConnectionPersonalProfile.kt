//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Fragment
import com.cyberconnect.link3.type.ConnectStatus
import com.cyberconnect.link3.type.ConnectionDegree
import com.cyberconnect.link3.type.PersonalDisplayName_Type
import kotlin.Boolean
import kotlin.Int
import kotlin.String

public data class ConnectionPersonalProfile(
  public val id: String,
  public val handle: String,
  public val owner: Owner,
  /**
   * Personal headline, including Title and Organization.
   */
  public val headline: Headline,
  /**
   * Display name of the personal profile, standard displayname or ENS, standard: 1-20 characters;
   * letters, numbers, and blanks only.
   */
  public val displayName: DisplayName,
  /**
   * Profile avatar picture, hash of IPFS address or owned NFT.
   */
  public val profilePicture: ProfilePicture,
  public val connectStatus: ConnectStatus,
  public val connectionDegree: ConnectionDegree,
  public val reputation: Reputation,
  public val isVerified: Boolean,
  public val mutualConnections: MutualConnections,
) : Fragment.Data {
  public data class Owner(
    public val id: String,
    public val price: Price,
    public val lightInfo: LightInfo,
  )

  public data class Headline(
    public val displayName: String,
    public val title: String,
  )

  public data class DisplayName(
    public val displayName: String,
    public val type: PersonalDisplayName_Type,
  )

  public data class ProfilePicture(
    public val picture: String?,
  )

  public data class Reputation(
    public val total: Int,
  )

  public data class MutualConnections(
    public val list: kotlin.collections.List<List>,
  )

  public data class Price(
    public val price: Price1,
  )

  public data class Price1(
    public val `value`: String,
    public val decimal: Int,
  )

  public data class LightInfo(
    public val attestation: Attestation?,
  )

  public data class Attestation(
    public val uid: String,
  )

  public data class List(
    public val __typename: String,
    public val handle: String,
    public val id: String,
    /**
     * Synthetic field for inline fragment on PerProfile
     */
    public val onPerProfile: OnPerProfile?,
  )

  public data class OnPerProfile(
    /**
     * Profile avatar picture, hash of IPFS address or owned NFT.
     */
    public val profilePicture: ProfilePicture1,
    /**
     * Display name of the personal profile, standard displayname or ENS, standard: 1-20 characters;
     * letters, numbers, and blanks only.
     */
    public val displayName: DisplayName1,
  )

  public data class ProfilePicture1(
    public val picture: String?,
  )

  public data class DisplayName1(
    public val displayName: String,
  )
}
