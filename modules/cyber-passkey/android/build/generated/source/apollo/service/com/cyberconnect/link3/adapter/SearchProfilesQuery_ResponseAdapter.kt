//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.cyberconnect.link3.SearchProfilesQuery
import com.cyberconnect.link3.fragment.SearchOrgProfile
import com.cyberconnect.link3.fragment.SearchPerProfile
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object SearchProfilesQuery_ResponseAdapter {
  public object Data : Adapter<SearchProfilesQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("searchProfiles")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchProfilesQuery.Data {
      var _searchProfiles: SearchProfilesQuery.SearchProfiles? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _searchProfiles = SearchProfiles.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SearchProfilesQuery.Data(
        searchProfiles = _searchProfiles!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchProfilesQuery.Data,
    ): Unit {
      writer.name("searchProfiles")
      SearchProfiles.obj().toJson(writer, customScalarAdapters, value.searchProfiles)
    }
  }

  public object SearchProfiles : Adapter<SearchProfilesQuery.SearchProfiles> {
    public val RESPONSE_NAMES: List<String> = listOf("profiles", "orgProfiles")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchProfilesQuery.SearchProfiles {
      var _profiles: List<SearchProfilesQuery.Profile>? = null
      var _orgProfiles: List<SearchProfilesQuery.OrgProfile>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _profiles = Profile.obj(true).list().fromJson(reader, customScalarAdapters)
          1 -> _orgProfiles = OrgProfile.obj(true).list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return SearchProfilesQuery.SearchProfiles(
        profiles = _profiles!!,
        orgProfiles = _orgProfiles!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchProfilesQuery.SearchProfiles,
    ): Unit {
      writer.name("profiles")
      Profile.obj(true).list().toJson(writer, customScalarAdapters, value.profiles)

      writer.name("orgProfiles")
      OrgProfile.obj(true).list().toJson(writer, customScalarAdapters, value.orgProfiles)
    }
  }

  public object Profile : Adapter<SearchProfilesQuery.Profile> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchProfilesQuery.Profile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _searchPerProfile: SearchPerProfile? = null
      if (possibleTypes("PerProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _searchPerProfile = com.cyberconnect.link3.fragment.SearchPerProfileImpl_ResponseAdapter.SearchPerProfile.fromJson(reader,
            customScalarAdapters)
      }

      return SearchProfilesQuery.Profile(
        __typename = __typename,
        searchPerProfile = _searchPerProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchProfilesQuery.Profile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.searchPerProfile != null) {
        com.cyberconnect.link3.fragment.SearchPerProfileImpl_ResponseAdapter.SearchPerProfile.toJson(writer,
            customScalarAdapters, value.searchPerProfile)
      }
    }
  }

  public object OrgProfile : Adapter<SearchProfilesQuery.OrgProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        SearchProfilesQuery.OrgProfile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _searchOrgProfile: SearchOrgProfile? = null
      if (possibleTypes("OrgProfile").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _searchOrgProfile = com.cyberconnect.link3.fragment.SearchOrgProfileImpl_ResponseAdapter.SearchOrgProfile.fromJson(reader,
            customScalarAdapters)
      }

      return SearchProfilesQuery.OrgProfile(
        __typename = __typename,
        searchOrgProfile = _searchOrgProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: SearchProfilesQuery.OrgProfile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.searchOrgProfile != null) {
        com.cyberconnect.link3.fragment.SearchOrgProfileImpl_ResponseAdapter.SearchOrgProfile.toJson(writer,
            customScalarAdapters, value.searchOrgProfile)
      }
    }
  }
}
