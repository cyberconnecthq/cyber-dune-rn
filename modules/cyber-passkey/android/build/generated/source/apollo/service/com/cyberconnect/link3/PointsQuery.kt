//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.adapter.PointsQuery_ResponseAdapter
import com.cyberconnect.link3.selections.PointsQuerySelections
import com.cyberconnect.link3.type.MeResponse_Status
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public class PointsQuery() : Query<PointsQuery.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = PointsQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cyberconnect.link3.type.Query.type
  )
  .selections(selections = PointsQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(PointsQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val me: Me,
  ) : Query.Data

  public data class Me(
    public val status: MeResponse_Status,
    public val message: String,
    public val `data`: Data1?,
  )

  public data class Data1(
    public val pointAccount: PointAccount,
    public val pointTasks: List<PointTask>,
  )

  public data class PointAccount(
    public val completedTasksCount: Int,
    public val totalPoints: Int,
  )

  public data class PointTask(
    public val __typename: String,
    /**
     * Synthetic field for 'PointTask'
     */
    public val pointTask: com.cyberconnect.link3.fragment.PointTask,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "e54f2cc7dca4503038f8bd3e4ef389173d84478459fa83f77cabfcf73b887f64"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query points {
     *   me {
     *     status
     *     message
     *     data {
     *       pointAccount {
     *         completedTasksCount
     *         totalPoints
     *       }
     *       pointTasks {
     *         __typename
     *         ...PointTask
     *       }
     *     }
     *   }
     * }
     *
     * fragment PointTask on PointTask {
     *   id
     *   name
     *   phase
     *   points
     *   status
     *   taskType
     *   subtitle
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query points { me { status message data { pointAccount { completedTasksCount totalPoints } pointTasks { __typename ...PointTask } } } }  fragment PointTask on PointTask { id name phase points status taskType subtitle }"

    public const val OPERATION_NAME: String = "points"
  }
}
