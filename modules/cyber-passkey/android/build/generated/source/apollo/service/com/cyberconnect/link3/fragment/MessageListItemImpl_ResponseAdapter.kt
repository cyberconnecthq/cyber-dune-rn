//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.type.MessageType
import com.cyberconnect.link3.type.PaidStatus
import com.cyberconnect.link3.type.adapter.MessageType_ResponseAdapter
import com.cyberconnect.link3.type.adapter.PaidStatus_ResponseAdapter
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object MessageListItemImpl_ResponseAdapter {
  public object MessageListItem : Adapter<com.cyberconnect.link3.fragment.MessageListItem> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "user", "unreadCount", "lastMessage")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MessageListItem {
      var _id: String? = null
      var _user: com.cyberconnect.link3.fragment.MessageListItem.User? = null
      var _unreadCount: Int? = null
      var _lastMessage: com.cyberconnect.link3.fragment.MessageListItem.LastMessage? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _user = User.obj().fromJson(reader, customScalarAdapters)
          2 -> _unreadCount = IntAdapter.fromJson(reader, customScalarAdapters)
          3 -> _lastMessage = LastMessage.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MessageListItem(
        id = _id!!,
        user = _user!!,
        unreadCount = _unreadCount!!,
        lastMessage = _lastMessage
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MessageListItem,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("user")
      User.obj().toJson(writer, customScalarAdapters, value.user)

      writer.name("unreadCount")
      IntAdapter.toJson(writer, customScalarAdapters, value.unreadCount)

      writer.name("lastMessage")
      LastMessage.obj().nullable().toJson(writer, customScalarAdapters, value.lastMessage)
    }
  }

  public object User : Adapter<com.cyberconnect.link3.fragment.MessageListItem.User> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "lightInfo")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MessageListItem.User {
      var _id: String? = null
      var _lightInfo: com.cyberconnect.link3.fragment.MessageListItem.LightInfo? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _lightInfo = LightInfo.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MessageListItem.User(
        id = _id!!,
        lightInfo = _lightInfo!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MessageListItem.User,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("lightInfo")
      LightInfo.obj().toJson(writer, customScalarAdapters, value.lightInfo)
    }
  }

  public object LightInfo : Adapter<com.cyberconnect.link3.fragment.MessageListItem.LightInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("handle", "avatar", "displayName",
        "formattedAddress", "remark")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MessageListItem.LightInfo {
      var _handle: String? = null
      var _avatar: String? = null
      var _displayName: String? = null
      var _formattedAddress: String? = null
      var _remark: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _handle = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _avatar = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _formattedAddress = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _remark = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MessageListItem.LightInfo(
        handle = _handle!!,
        avatar = _avatar!!,
        displayName = _displayName!!,
        formattedAddress = _formattedAddress!!,
        remark = _remark!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MessageListItem.LightInfo,
    ): Unit {
      writer.name("handle")
      StringAdapter.toJson(writer, customScalarAdapters, value.handle)

      writer.name("avatar")
      StringAdapter.toJson(writer, customScalarAdapters, value.avatar)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("formattedAddress")
      StringAdapter.toJson(writer, customScalarAdapters, value.formattedAddress)

      writer.name("remark")
      StringAdapter.toJson(writer, customScalarAdapters, value.remark)
    }
  }

  public object LastMessage : Adapter<com.cyberconnect.link3.fragment.MessageListItem.LastMessage> {
    public val RESPONSE_NAMES: List<String> = listOf("content", "msgTime", "msgType", "replyToEarn",
        "paid", "sender")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MessageListItem.LastMessage {
      var _content: String? = null
      var _msgTime: Int? = null
      var _msgType: MessageType? = null
      var _replyToEarn: Boolean? = null
      var _paid: com.cyberconnect.link3.fragment.MessageListItem.Paid? = null
      var _sender: com.cyberconnect.link3.fragment.MessageListItem.Sender? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _content = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _msgTime = IntAdapter.fromJson(reader, customScalarAdapters)
          2 -> _msgType = MessageType_ResponseAdapter.fromJson(reader, customScalarAdapters)
          3 -> _replyToEarn = BooleanAdapter.fromJson(reader, customScalarAdapters)
          4 -> _paid = Paid.obj().fromJson(reader, customScalarAdapters)
          5 -> _sender = Sender.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MessageListItem.LastMessage(
        content = _content!!,
        msgTime = _msgTime!!,
        msgType = _msgType!!,
        replyToEarn = _replyToEarn!!,
        paid = _paid!!,
        sender = _sender!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MessageListItem.LastMessage,
    ): Unit {
      writer.name("content")
      StringAdapter.toJson(writer, customScalarAdapters, value.content)

      writer.name("msgTime")
      IntAdapter.toJson(writer, customScalarAdapters, value.msgTime)

      writer.name("msgType")
      MessageType_ResponseAdapter.toJson(writer, customScalarAdapters, value.msgType)

      writer.name("replyToEarn")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.replyToEarn)

      writer.name("paid")
      Paid.obj().toJson(writer, customScalarAdapters, value.paid)

      writer.name("sender")
      Sender.obj().toJson(writer, customScalarAdapters, value.sender)
    }
  }

  public object Paid : Adapter<com.cyberconnect.link3.fragment.MessageListItem.Paid> {
    public val RESPONSE_NAMES: List<String> = listOf("earnValue", "status", "refundAt")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MessageListItem.Paid {
      var _earnValue: com.cyberconnect.link3.fragment.MessageListItem.EarnValue? = null
      var _status: PaidStatus? = null
      var _refundAt: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _earnValue = EarnValue.obj(true).nullable().fromJson(reader, customScalarAdapters)
          1 -> _status = PaidStatus_ResponseAdapter.fromJson(reader, customScalarAdapters)
          2 -> _refundAt = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MessageListItem.Paid(
        earnValue = _earnValue,
        status = _status!!,
        refundAt = _refundAt
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MessageListItem.Paid,
    ): Unit {
      writer.name("earnValue")
      EarnValue.obj(true).nullable().toJson(writer, customScalarAdapters, value.earnValue)

      writer.name("status")
      PaidStatus_ResponseAdapter.toJson(writer, customScalarAdapters, value.status)

      writer.name("refundAt")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.refundAt)
    }
  }

  public object EarnValue : Adapter<com.cyberconnect.link3.fragment.MessageListItem.EarnValue> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MessageListItem.EarnValue {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _price = com.cyberconnect.link3.fragment.PriceImpl_ResponseAdapter.Price.fromJson(reader,
          customScalarAdapters)

      return com.cyberconnect.link3.fragment.MessageListItem.EarnValue(
        __typename = __typename!!,
        price = _price
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MessageListItem.EarnValue,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.PriceImpl_ResponseAdapter.Price.toJson(writer,
          customScalarAdapters, value.price)
    }
  }

  public object Sender : Adapter<com.cyberconnect.link3.fragment.MessageListItem.Sender> {
    public val RESPONSE_NAMES: List<String> = listOf("id")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.MessageListItem.Sender {
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.MessageListItem.Sender(
        id = _id!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.MessageListItem.Sender,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)
    }
  }
}
