//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.adapter.GetExplorePostsQuery_ResponseAdapter
import com.cyberconnect.link3.adapter.GetExplorePostsQuery_VariablesAdapter
import com.cyberconnect.link3.fragment.ProfileInTrending
import com.cyberconnect.link3.selections.GetExplorePostsQuerySelections
import com.cyberconnect.link3.type.ExplorePostsRequest
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public data class GetExplorePostsQuery(
  public val input: ExplorePostsRequest,
) : Query<GetExplorePostsQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    GetExplorePostsQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = GetExplorePostsQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cyberconnect.link3.type.Query.type
  )
  .selections(selections = GetExplorePostsQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(GetExplorePostsQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val explorePosts: List<ExplorePost>?,
  ) : Query.Data

  public data class ExplorePost(
    public val id: String,
    public val title: String,
    public val cover: Any,
    public val description: String,
    public val viewCount: Int,
    public val publishedAt: Any,
    public val likeCount: Int,
    public val likedStatus: LikedStatus,
    public val profile: Profile,
  )

  public data class LikedStatus(
    public val liked: Boolean,
  )

  public data class Profile(
    public val __typename: String,
    /**
     * Synthetic field for 'ProfileInTrending'
     */
    public val profileInTrending: ProfileInTrending,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "2f90c649f6d8a9e544ef7a82094261c61980faaacb873761bf8f34bc91e41cbf"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query getExplorePosts($input: ExplorePostsRequest!) {
     *   explorePosts(input: $input) {
     *     id
     *     title
     *     cover
     *     description
     *     viewCount
     *     publishedAt
     *     likeCount
     *     likedStatus {
     *       liked
     *     }
     *     profile {
     *       __typename
     *       ...ProfileInTrending
     *     }
     *   }
     * }
     *
     * fragment UnionIsFollowing on Profile {
     *   __typename
     *   ... on OrgProfile {
     *     isFollowing
     *   }
     *   ... on PerProfile {
     *     isFollowing
     *   }
     * }
     *
     * fragment UnionDisplayName on Profile {
     *   __typename
     *   ... on OrgProfile {
     *     displayName
     *   }
     *   ... on PerProfile {
     *     personalDisplayName: displayName {
     *       displayName
     *     }
     *   }
     * }
     *
     * fragment UnionProfilePicture on Profile {
     *   __typename
     *   ... on OrgProfile {
     *     profilePicture
     *   }
     *   ... on PerProfile {
     *     personalProfilePicture: profilePicture {
     *       picture
     *     }
     *   }
     * }
     *
     * fragment UnionBaseProfile on Profile {
     *   __typename
     *   type
     *   handle
     *   ...UnionIsFollowing
     *   ...UnionDisplayName
     *   ...UnionProfilePicture
     * }
     *
     * fragment ProfileInTrending on Profile {
     *   __typename
     *   ...UnionBaseProfile
     *   ... on PerProfile {
     *     isFollowing
     *   }
     *   ... on OrgProfile {
     *     isFollowing
     *     organization {
     *       verification
     *     }
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query getExplorePosts(${'$'}input: ExplorePostsRequest!) { explorePosts(input: ${'$'}input) { id title cover description viewCount publishedAt likeCount likedStatus { liked } profile { __typename ...ProfileInTrending } } }  fragment UnionIsFollowing on Profile { __typename ... on OrgProfile { isFollowing } ... on PerProfile { isFollowing } }  fragment UnionDisplayName on Profile { __typename ... on OrgProfile { displayName } ... on PerProfile { personalDisplayName: displayName { displayName } } }  fragment UnionProfilePicture on Profile { __typename ... on OrgProfile { profilePicture } ... on PerProfile { personalProfilePicture: profilePicture { picture } } }  fragment UnionBaseProfile on Profile { __typename type handle ...UnionIsFollowing ...UnionDisplayName ...UnionProfilePicture }  fragment ProfileInTrending on Profile { __typename ...UnionBaseProfile ... on PerProfile { isFollowing } ... on OrgProfile { isFollowing organization { verification } } }"

    public const val OPERATION_NAME: String = "getExplorePosts"
  }
}
