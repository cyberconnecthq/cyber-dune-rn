//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.type.ProfileType
import com.cyberconnect.link3.type.adapter.ProfileType_ResponseAdapter
import kotlin.Boolean
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object OrgProfileImpl_ResponseAdapter {
  public object OrgProfile : Adapter<com.cyberconnect.link3.fragment.OrgProfile> {
    public val RESPONSE_NAMES: List<String> = listOf("handle", "bio", "cmcTokenId",
        "profilePicture", "backgroundPicture", "sector", "networks", "displayName", "isFollowing",
        "type", "organization")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.OrgProfile {
      var _handle: String? = null
      var _bio: String? = null
      var _cmcTokenId: String? = null
      var _profilePicture: String? = null
      var _backgroundPicture: String? = null
      var _sector: String? = null
      var _networks: List<String>? = null
      var _displayName: String? = null
      var _isFollowing: Boolean? = null
      var _type: ProfileType? = null
      var _organization: com.cyberconnect.link3.fragment.OrgProfile.Organization? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _handle = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _bio = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _cmcTokenId = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _profilePicture = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _backgroundPicture = StringAdapter.fromJson(reader, customScalarAdapters)
          5 -> _sector = StringAdapter.fromJson(reader, customScalarAdapters)
          6 -> _networks = StringAdapter.list().fromJson(reader, customScalarAdapters)
          7 -> _displayName = StringAdapter.fromJson(reader, customScalarAdapters)
          8 -> _isFollowing = BooleanAdapter.fromJson(reader, customScalarAdapters)
          9 -> _type = ProfileType_ResponseAdapter.fromJson(reader, customScalarAdapters)
          10 -> _organization = Organization.obj(true).fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.OrgProfile(
        handle = _handle!!,
        bio = _bio!!,
        cmcTokenId = _cmcTokenId!!,
        profilePicture = _profilePicture!!,
        backgroundPicture = _backgroundPicture!!,
        sector = _sector!!,
        networks = _networks!!,
        displayName = _displayName!!,
        isFollowing = _isFollowing!!,
        type = _type!!,
        organization = _organization!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.OrgProfile,
    ): Unit {
      writer.name("handle")
      StringAdapter.toJson(writer, customScalarAdapters, value.handle)

      writer.name("bio")
      StringAdapter.toJson(writer, customScalarAdapters, value.bio)

      writer.name("cmcTokenId")
      StringAdapter.toJson(writer, customScalarAdapters, value.cmcTokenId)

      writer.name("profilePicture")
      StringAdapter.toJson(writer, customScalarAdapters, value.profilePicture)

      writer.name("backgroundPicture")
      StringAdapter.toJson(writer, customScalarAdapters, value.backgroundPicture)

      writer.name("sector")
      StringAdapter.toJson(writer, customScalarAdapters, value.sector)

      writer.name("networks")
      StringAdapter.list().toJson(writer, customScalarAdapters, value.networks)

      writer.name("displayName")
      StringAdapter.toJson(writer, customScalarAdapters, value.displayName)

      writer.name("isFollowing")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.isFollowing)

      writer.name("type")
      ProfileType_ResponseAdapter.toJson(writer, customScalarAdapters, value.type)

      writer.name("organization")
      Organization.obj(true).toJson(writer, customScalarAdapters, value.organization)
    }
  }

  public object Organization : Adapter<com.cyberconnect.link3.fragment.OrgProfile.Organization> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.OrgProfile.Organization {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _organizationInProfile = com.cyberconnect.link3.fragment.OrganizationInProfileImpl_ResponseAdapter.OrganizationInProfile.fromJson(reader,
          customScalarAdapters)

      return com.cyberconnect.link3.fragment.OrgProfile.Organization(
        __typename = __typename!!,
        organizationInProfile = _organizationInProfile
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.OrgProfile.Organization,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.OrganizationInProfileImpl_ResponseAdapter.OrganizationInProfile.toJson(writer,
          customScalarAdapters, value.organizationInProfile)
    }
  }
}
