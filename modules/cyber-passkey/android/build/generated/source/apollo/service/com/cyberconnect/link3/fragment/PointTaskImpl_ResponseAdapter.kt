//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.cyberconnect.link3.type.PointTaskPhase
import com.cyberconnect.link3.type.PointTaskStatus
import com.cyberconnect.link3.type.PointTaskType
import com.cyberconnect.link3.type.adapter.PointTaskPhase_ResponseAdapter
import com.cyberconnect.link3.type.adapter.PointTaskStatus_ResponseAdapter
import com.cyberconnect.link3.type.adapter.PointTaskType_ResponseAdapter
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object PointTaskImpl_ResponseAdapter {
  public object PointTask : Adapter<com.cyberconnect.link3.fragment.PointTask> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "name", "phase", "points", "status",
        "taskType", "subtitle")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.cyberconnect.link3.fragment.PointTask {
      var _id: String? = null
      var _name: String? = null
      var _phase: PointTaskPhase? = null
      var _points: Int? = null
      var _status: PointTaskStatus? = null
      var _taskType: PointTaskType? = null
      var _subtitle: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _phase = PointTaskPhase_ResponseAdapter.fromJson(reader, customScalarAdapters)
          3 -> _points = IntAdapter.fromJson(reader, customScalarAdapters)
          4 -> _status = PointTaskStatus_ResponseAdapter.fromJson(reader, customScalarAdapters)
          5 -> _taskType = PointTaskType_ResponseAdapter.fromJson(reader, customScalarAdapters)
          6 -> _subtitle = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.cyberconnect.link3.fragment.PointTask(
        id = _id!!,
        name = _name!!,
        phase = _phase!!,
        points = _points!!,
        status = _status!!,
        taskType = _taskType!!,
        subtitle = _subtitle!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.cyberconnect.link3.fragment.PointTask,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("phase")
      PointTaskPhase_ResponseAdapter.toJson(writer, customScalarAdapters, value.phase)

      writer.name("points")
      IntAdapter.toJson(writer, customScalarAdapters, value.points)

      writer.name("status")
      PointTaskStatus_ResponseAdapter.toJson(writer, customScalarAdapters, value.status)

      writer.name("taskType")
      PointTaskType_ResponseAdapter.toJson(writer, customScalarAdapters, value.taskType)

      writer.name("subtitle")
      StringAdapter.toJson(writer, customScalarAdapters, value.subtitle)
    }
  }
}
