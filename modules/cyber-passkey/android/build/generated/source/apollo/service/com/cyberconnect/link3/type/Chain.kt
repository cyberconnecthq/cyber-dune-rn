//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.type

import com.apollographql.apollo3.api.EnumType
import kotlin.Array
import kotlin.String

public enum class Chain(
  public val rawValue: String,
) {
  ETHEREUM("ETHEREUM"),
  ROPSTEN("ROPSTEN"),
  KOVAN("KOVAN"),
  RINKEBY("RINKEBY"),
  GOERLI("GOERLI"),
  BSC("BSC"),
  BSC_TESTNET("BSC_TESTNET"),
  MATIC("MATIC"),
  MUMBAI("MUMBAI"),
  XDAI("XDAI"),
  ARBITRUM("ARBITRUM"),
  ARBITRUM_TESTNET("ARBITRUM_TESTNET"),
  HECO("HECO"),
  HECO_TESTNET("HECO_TESTNET"),
  FANTOM("FANTOM"),
  FANTOM_TESTNET("FANTOM_TESTNET"),
  AVALANCHE("AVALANCHE"),
  AVALANCHE_TESTNET("AVALANCHE_TESTNET"),
  SOLANA("SOLANA"),
  SOLANA_DEVNET("SOLANA_DEVNET"),
  MOONBEAM("MOONBEAM"),
  OPTIMISM("OPTIMISM"),
  IOTEX("IOTEX"),
  APTOS("APTOS"),
  APTOS_TESTNET("APTOS_TESTNET"),
  OKC("OKC"),
  BOBA_ETH("BOBA_ETH"),
  BOBA_AVAX("BOBA_AVAX"),
  BOBA_BNB("BOBA_BNB"),
  BOBA_MOONBEAM("BOBA_MOONBEAM"),
  BOBA_FANTOM("BOBA_FANTOM"),
  /**
   * Auto generated constant for unknown enum values
   */
  UNKNOWN__("UNKNOWN__"),
  ;

  public companion object {
    public val type: EnumType = EnumType("Chain", listOf("ETHEREUM", "ROPSTEN", "KOVAN", "RINKEBY",
        "GOERLI", "BSC", "BSC_TESTNET", "MATIC", "MUMBAI", "XDAI", "ARBITRUM", "ARBITRUM_TESTNET",
        "HECO", "HECO_TESTNET", "FANTOM", "FANTOM_TESTNET", "AVALANCHE", "AVALANCHE_TESTNET",
        "SOLANA", "SOLANA_DEVNET", "MOONBEAM", "OPTIMISM", "IOTEX", "APTOS", "APTOS_TESTNET", "OKC",
        "BOBA_ETH", "BOBA_AVAX", "BOBA_BNB", "BOBA_MOONBEAM", "BOBA_FANTOM"))

    public fun safeValueOf(rawValue: String): Chain = values().find { it.rawValue == rawValue } ?:
        UNKNOWN__

    /**
     * Returns all [Chain] known at compile time
     */
    public fun knownValues(): Array<Chain> = arrayOf(
      ETHEREUM,
      ROPSTEN,
      KOVAN,
      RINKEBY,
      GOERLI,
      BSC,
      BSC_TESTNET,
      MATIC,
      MUMBAI,
      XDAI,
      ARBITRUM,
      ARBITRUM_TESTNET,
      HECO,
      HECO_TESTNET,
      FANTOM,
      FANTOM_TESTNET,
      AVALANCHE,
      AVALANCHE_TESTNET,
      SOLANA,
      SOLANA_DEVNET,
      MOONBEAM,
      OPTIMISM,
      IOTEX,
      APTOS,
      APTOS_TESTNET,
      OKC,
      BOBA_ETH,
      BOBA_AVAX,
      BOBA_BNB,
      BOBA_MOONBEAM,
      BOBA_FANTOM)
  }
}
