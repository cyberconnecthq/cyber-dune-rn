//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cyberconnect.link3.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.AnyAdapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cyberconnect.link3.GetExplorePostsQuery
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetExplorePostsQuery_ResponseAdapter {
  public object Data : Adapter<GetExplorePostsQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("explorePosts")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetExplorePostsQuery.Data {
      var _explorePosts: List<GetExplorePostsQuery.ExplorePost>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _explorePosts = ExplorePost.obj().list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return GetExplorePostsQuery.Data(
        explorePosts = _explorePosts
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetExplorePostsQuery.Data,
    ): Unit {
      writer.name("explorePosts")
      ExplorePost.obj().list().nullable().toJson(writer, customScalarAdapters, value.explorePosts)
    }
  }

  public object ExplorePost : Adapter<GetExplorePostsQuery.ExplorePost> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "title", "cover", "description",
        "viewCount", "publishedAt", "likeCount", "likedStatus", "profile")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetExplorePostsQuery.ExplorePost {
      var _id: String? = null
      var _title: String? = null
      var _cover: Any? = null
      var _description: String? = null
      var _viewCount: Int? = null
      var _publishedAt: Any? = null
      var _likeCount: Int? = null
      var _likedStatus: GetExplorePostsQuery.LikedStatus? = null
      var _profile: GetExplorePostsQuery.Profile? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _cover = AnyAdapter.fromJson(reader, customScalarAdapters)
          3 -> _description = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _viewCount = IntAdapter.fromJson(reader, customScalarAdapters)
          5 -> _publishedAt = AnyAdapter.fromJson(reader, customScalarAdapters)
          6 -> _likeCount = IntAdapter.fromJson(reader, customScalarAdapters)
          7 -> _likedStatus = LikedStatus.obj().fromJson(reader, customScalarAdapters)
          8 -> _profile = Profile.obj(true).fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetExplorePostsQuery.ExplorePost(
        id = _id!!,
        title = _title!!,
        cover = _cover!!,
        description = _description!!,
        viewCount = _viewCount!!,
        publishedAt = _publishedAt!!,
        likeCount = _likeCount!!,
        likedStatus = _likedStatus!!,
        profile = _profile!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetExplorePostsQuery.ExplorePost,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("cover")
      AnyAdapter.toJson(writer, customScalarAdapters, value.cover)

      writer.name("description")
      StringAdapter.toJson(writer, customScalarAdapters, value.description)

      writer.name("viewCount")
      IntAdapter.toJson(writer, customScalarAdapters, value.viewCount)

      writer.name("publishedAt")
      AnyAdapter.toJson(writer, customScalarAdapters, value.publishedAt)

      writer.name("likeCount")
      IntAdapter.toJson(writer, customScalarAdapters, value.likeCount)

      writer.name("likedStatus")
      LikedStatus.obj().toJson(writer, customScalarAdapters, value.likedStatus)

      writer.name("profile")
      Profile.obj(true).toJson(writer, customScalarAdapters, value.profile)
    }
  }

  public object LikedStatus : Adapter<GetExplorePostsQuery.LikedStatus> {
    public val RESPONSE_NAMES: List<String> = listOf("liked")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetExplorePostsQuery.LikedStatus {
      var _liked: Boolean? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _liked = BooleanAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetExplorePostsQuery.LikedStatus(
        liked = _liked!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetExplorePostsQuery.LikedStatus,
    ): Unit {
      writer.name("liked")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.liked)
    }
  }

  public object Profile : Adapter<GetExplorePostsQuery.Profile> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetExplorePostsQuery.Profile {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _profileInTrending = com.cyberconnect.link3.fragment.ProfileInTrendingImpl_ResponseAdapter.ProfileInTrending.fromJson(reader,
          customScalarAdapters)

      return GetExplorePostsQuery.Profile(
        __typename = __typename!!,
        profileInTrending = _profileInTrending
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetExplorePostsQuery.Profile,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.cyberconnect.link3.fragment.ProfileInTrendingImpl_ResponseAdapter.ProfileInTrending.toJson(writer,
          customScalarAdapters, value.profileInTrending)
    }
  }
}
